/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2009, Okadafx"
#property link      "dollarsniper@yahoo.com"

#include <WinUser32.mqh>

extern string t = "Trade Lots, if Lots=0  -> automatic Lot with MM %";
extern double Lots = 0.01;
extern bool MMMini = FALSE;
extern bool MMStandard = FALSE;
extern string Multi0 = "Trade MultiLots 0 -> (auto lots)";
extern string Multi1 = "Trade MultiLots 1 ->  all lots would be multiplied by 1 and so they would be the same size.";
extern string Multi2 = "Trade MultiLots 2 ->  all new lots would be doubled.";
extern string Multi3 = "Trade MultiLots 3 ->  all new lots would be triple.";
extern int Multilots = 0;
string gs_unused_136 = "If Trail Active TakeProfit Must + 10 pips";
string gs_unused_144 = "If Trail Not Active TakeProfit Must Default 33 pips";
bool gi_152 = FALSE;
int gi_156 = 0;
extern int MaxTrades = 8;
extern int Range = 30;
extern int TakeProfit = 33;
extern int StopLoss = 0;
extern bool Pending = TRUE;
extern bool Hedge = TRUE;
extern bool Reverse = FALSE;
int g_slippage_188 = 3;
extern bool UseSignal = TRUE;
string gs_unused_196 = "set true for profit target in USD";
bool gi_204 = TRUE;
double gd_208 = 2.0;
string gs_unused_216 = "set true for close in profit/loss";
bool gi_224 = FALSE;
int g_magic_228;
int gi_232;
int gi_236;
int gi_240;
int gi_244;
int gi_248;
int gi_252;
int gi_256;
int gi_260;
int g_ord_total_272 = 999999;
double gd_276;
double g_ord_lots_284;
double g_ord_lots_292;
double g_lots_300;
double gd_308;
int gi_316;
int gi_320;

int init() {
   if (Multilots == 0) gd_308 = 2.222;
   if (Multilots == 1) gd_308 = 1;
   if (Multilots == 2) gd_308 = 2;
   if (Multilots == 3) gd_308 = 3;
   if (Symbol() == "AUDCADm" || Symbol() == "AUDCAD") g_magic_228 = 801001;
   if (Symbol() == "AUDJPYm" || Symbol() == "AUDJPY") g_magic_228 = 801002;
   if (Symbol() == "AUDNZDm" || Symbol() == "AUDNZD") g_magic_228 = 801003;
   if (Symbol() == "AUDUSDm" || Symbol() == "AUDUSD") g_magic_228 = 801004;
   if (Symbol() == "CHFJPYm" || Symbol() == "CHFJPY") g_magic_228 = 801005;
   if (Symbol() == "EURAUDm" || Symbol() == "EURAUD") g_magic_228 = 801006;
   if (Symbol() == "EURCADm" || Symbol() == "EURCAD") g_magic_228 = 801007;
   if (Symbol() == "EURCHFm" || Symbol() == "EURCHF") g_magic_228 = 801008;
   if (Symbol() == "EURGBPm" || Symbol() == "EURGBP") g_magic_228 = 801009;
   if (Symbol() == "EURJPYm" || Symbol() == "EURJPY") g_magic_228 = 801010;
   if (Symbol() == "EURUSDm" || Symbol() == "EURUSD") g_magic_228 = 801011;
   if (Symbol() == "GBPCHFm" || Symbol() == "GBPCHF") g_magic_228 = 801012;
   if (Symbol() == "GBPJPYm" || Symbol() == "GBPJPY") g_magic_228 = 801013;
   if (Symbol() == "GBPUSDm" || Symbol() == "GBPUSD") g_magic_228 = 801014;
   if (Symbol() == "NZDJPYm" || Symbol() == "NZDJPY") g_magic_228 = 801015;
   if (Symbol() == "NZDUSDm" || Symbol() == "NZDUSD") g_magic_228 = 801016;
   if (Symbol() == "USDCHFm" || Symbol() == "USDCHF") g_magic_228 = 801017;
   if (Symbol() == "USDJPYm" || Symbol() == "USDJPY") g_magic_228 = 801018;
   if (Symbol() == "USDCADm" || Symbol() == "USDCAD") g_magic_228 = 801019;
   return (0);
}

int deinit() {
   return (0);
}

int start() {
   int l_ticket_28;
   int l_ticket_32;
   double l_price_36;
   double l_price_44;
   double l_price_52;
   double l_price_60;
   string ls_0 = "http://bestforexsniper.com";
   string ls_unused_8 = "[EA]Sniper XX";
   bool l_bool_16 = IsDemo();
  /* if (!l_bool_16) {
      Alert("You can not use the program with a real account!.", 
      "\n", "Please contact: " + ls_0);
      return (0);
   }
  */
   ObjectsDeleteAll();
   if (MMMini == TRUE) {
      Lots = AccountFreeMargin() / 50000.0;
      if (Lots < 0.01) Lots = 0.01;
   }
   if (MMStandard == TRUE) {
      Lots = AccountFreeMargin() / 500000.0;
      if (Lots < 0.01) Lots = 0.01;
   }
   if (gi_204 && OrdersTotal() < 1) gi_320 = AccountBalance() * ((gd_208 + 100.0) / 100.0);
   if (gi_224 == TRUE) {
      if (MessageBox("Do you really want to close all trades?", "Script", MB_YESNO|MB_ICONQUESTION) != IDYES) return (1);
      while (OrdersTotal() > 0) {
         if (OrderSelect(0, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) OrderClose(OrderTicket(), OrderLots(), OrderClosePrice(), 3, CLR_NONE);
            if (OrderType() != OP_BUY && OrderType() != OP_SELL) OrderDelete(OrderTicket());
         }
      }
      return (0);
   }
   if (gi_204 == TRUE && gi_320 > 0 && AccountBalance() > gi_320 && AccountEquity() > gi_320) {
      while (OrdersTotal() > 0) {
         if (OrderSelect(0, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) OrderClose(OrderTicket(), OrderLots(), OrderClosePrice(), 3, CLR_NONE);
            if (OrderType() != OP_BUY && OrderType() != OP_SELL) OrderDelete(OrderTicket());
            Print("Close in DailyBalanceTarget  :", GetLastError());
            return (0);
         }
      }
   }
   if (AccountProfit() >= 500.0 * AccountFreeMargin() / 10000.0) {
      while (OrdersTotal() > 0) {
         if (OrderSelect(0, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) OrderClose(OrderTicket(), OrderLots(), OrderClosePrice(), 3, CLR_NONE);
            if (OrderType() != OP_BUY && OrderType() != OP_SELL) OrderDelete(OrderTicket());
            Print("Close All Profit  :", GetLastError());
            return (0);
         }
      }
   }
   if (gi_152) {
      gi_316 = TakeProfit - 10;
      for (int l_ord_total_20 = OrdersTotal(); l_ord_total_20 >= 0; l_ord_total_20--) {
         OrderSelect(l_ord_total_20, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == g_magic_228) {
            if (OrderType() == OP_SELL) {
               if (gi_316 > 0.0) {
                  if (OrderOpenPrice() - Ask >= gi_316 * Point) {
                     if (OrderStopLoss() > Ask + Point * gi_316) {
                        OrderModify(OrderTicket(), OrderOpenPrice(), Ask + 10.0 * Point, OrderClosePrice() - TakeProfit * Point - 10.0 * Point, 800, Purple);
                        Print("Modify StopLoss  :", GetLastError());
                        return (0);
                     }
                  }
               }
            }
            if (OrderType() == OP_BUY) {
               if (gi_316 > 0.0) {
                  if (Bid - OrderOpenPrice() >= gi_316 * Point) {
                     if (OrderStopLoss() < Bid - Point * gi_316) {
                        OrderModify(OrderTicket(), OrderOpenPrice(), Bid - 10.0 * Point, OrderClosePrice() + TakeProfit * Point + 10.0 * Point, 800, Yellow);
                        Print("Modify StopLoss  :", GetLastError());
                        return (0);
                     }
                  }
               }
            }
         }
      }
   }
   if (g_ord_total_272 == 999999) {
      if (iBars(NULL, PERIOD_H1) < 30) {
         Print("waiting - bars less than ", 30);
         return (0);
      }
   }
   Check();
   if (OrdersTotal() != g_ord_total_272) {
      g_ord_total_272 = OrdersTotal();
      if (gi_256 > gi_240 + gi_248) {
         gi_232 = -1;
         Check();
         gi_236 = TimeCurrent() + 30;
         Check();
         return (-1);
      }
      if (gi_260 > gi_244 + gi_252) {
         gi_232 = 1;
         Check();
         gi_236 = TimeCurrent() + 30;
         Check();
         return (-1);
      }
      if (Lots > 0.0) g_lots_300 = Lots;
      else g_lots_300 = gi_156 / 100.0 * AccountFreeMargin() / MarketInfo(Symbol(), MODE_MARGINREQUIRED);
      if (MarketInfo(Symbol(), MODE_LOTSTEP) == 0.01) g_lots_300 = NormalizeDouble(g_lots_300, 2);
      if (MarketInfo(Symbol(), MODE_LOTSTEP) == 0.1) g_lots_300 = NormalizeDouble(g_lots_300, 1);
      if (MarketInfo(Symbol(), MODE_LOTSTEP) == 1.0) g_lots_300 = NormalizeDouble(g_lots_300, 0);
      if (g_lots_300 < MarketInfo(Symbol(), MODE_MINLOT)) g_lots_300 = MarketInfo(Symbol(), MODE_MINLOT);
      if (g_lots_300 > MarketInfo(Symbol(), MODE_MAXLOT)) g_lots_300 = MarketInfo(Symbol(), MODE_MAXLOT);
   }
   int li_24 = signal();
   if (TimeCurrent() >= gi_236) {
      if (UseSignal == TRUE) {
         if (li_24 > 0 && gi_240 == 0 && Hedge || gi_244 == 0) l_ticket_28 = OrderSend(Symbol(), OP_BUY, g_lots_300, Ask, g_slippage_188, 0, 0, "Brain UP", g_magic_228, 0, Green);
         if (li_24 < 0 && gi_244 == 0 && Hedge || gi_240 == 0) l_ticket_32 = OrderSend(Symbol(), OP_SELL, g_lots_300, Bid, g_slippage_188, 0, 0, "Brain Down", g_magic_228, 0, Red);
      }
      if (UseSignal == FALSE) {
         if (gi_240 == 0 && Hedge || gi_244 == 0) l_ticket_28 = OrderSend(Symbol(), OP_BUY, g_lots_300, Ask, g_slippage_188, 0, 0, "Brain UP", g_magic_228, 0, Green);
         if (gi_244 == 0 && Hedge || gi_240 == 0) l_ticket_32 = OrderSend(Symbol(), OP_SELL, g_lots_300, Bid, g_slippage_188, 0, 0, "Brain Down", g_magic_228, 0, Red);
      }
      if (l_ticket_28 > 0) {
         OrderSelect(l_ticket_28, SELECT_BY_TICKET);
         if (StopLoss > 0 && OrderStopLoss() == 0.0) l_price_36 = OrderOpenPrice() - StopLoss * Point;
         if (TakeProfit > 0 && OrderTakeProfit() == 0.0) l_price_44 = OrderOpenPrice() + TakeProfit * Point;
         OrderModify(l_ticket_28, OrderOpenPrice(), l_price_36, l_price_44, 0, CLR_NONE);
      }
      if (l_ticket_32 > 0) {
         OrderSelect(l_ticket_32, SELECT_BY_TICKET);
         if (StopLoss > 0 && OrderStopLoss() == 0.0) l_price_52 = OrderOpenPrice() + StopLoss * Point;
         if (TakeProfit > 0 && OrderTakeProfit() == 0.0) l_price_60 = OrderOpenPrice() - TakeProfit * Point;
         OrderModify(l_ticket_32, OrderOpenPrice(), l_price_52, l_price_60, 0, CLR_NONE);
      }
      if (gi_240 > 0 || gi_244 > 0) PendingOrders();
   }
   Check();
   gi_256 = gi_240 + gi_248;
   gi_260 = gi_244 + gi_252;
   if (gi_232 < 0 && gi_256 == 0) gi_232 = 0;
   if (gi_232 > 0 && gi_260 == 0) gi_232 = 0;
   Comment("Sniper EA is working...", 
      "\n", "signal: ", li_24, " ", gi_232, " total: ", g_ord_total_272, 
      "\n", "Your Money: ", AccountEquity(), " Profit: ", AccountProfit(), 
      "\n", "MultiLots = ", gd_308, 
   "\n", "Daily Target = ", gi_320);
   return (0);
}

int Check() {
   gi_240 = 0;
   gi_244 = 0;
   gi_248 = 0;
   gi_252 = 0;
   gd_276 = 0;
   g_ord_lots_284 = 0;
   g_ord_lots_292 = 0;
   for (int l_pos_0 = 0; l_pos_0 < OrdersTotal(); l_pos_0++) {
      if (OrderSelect(l_pos_0, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == g_magic_228) {
            if (OrderType() == OP_BUY) {
               gd_276 += OrderProfit();
               if (gi_232 == -1 || gi_232 == 22) {
                  OrderClose(OrderTicket(), OrderLots(), OrderClosePrice(), g_slippage_188, Gold);
                  continue;
               }
               gi_240 += 1;
               if (OrderLots() > g_ord_lots_284) g_ord_lots_284 = OrderLots();
            }
            if (OrderType() == OP_BUYLIMIT || OrderType() == OP_BUYSTOP) {
               if (gi_232 == -1 || gi_232 == 22) {
                  OrderDelete(OrderTicket(), Gold);
                  continue;
               }
               gi_248 += 1;
            }
            if (OrderType() == OP_SELL) {
               gd_276 += OrderProfit();
               if (gi_232 == 1 || gi_232 == 22) {
                  OrderClose(OrderTicket(), OrderLots(), OrderClosePrice(), g_slippage_188, Gold);
                  continue;
               }
               gi_244 += 1;
               if (OrderLots() > g_ord_lots_292) g_ord_lots_292 = OrderLots();
            }
            if (OrderType() == OP_SELLLIMIT || OrderType() == OP_SELLSTOP) {
               if (gi_232 == 1 || gi_232 == 22) OrderDelete(OrderTicket(), Gold);
               else gi_252 += 1;
            }
         }
      }
   }
   return (gi_240 - gi_244 + gi_248 - gi_252);
}

int PendingOrders() {
   double l_price_16;
   double l_price_24;
   double l_price_32;
   double l_price_40;
   if (!Pending) return (-1);
   double l_price_0 = Ask - Range * Point;
   double l_price_8 = Bid + Range * Point;
   if (gd_308 == 2.222) {
      g_ord_lots_284 = NormalizeDouble(2.0 * g_ord_lots_284 + g_lots_300, 2);
      g_ord_lots_292 = NormalizeDouble(2.0 * g_ord_lots_292 + g_lots_300, 2);
   } else {
      g_ord_lots_284 = NormalizeDouble(g_lots_300 * MathPow(gd_308, gi_240), 2);
      g_ord_lots_292 = NormalizeDouble(g_lots_300 * MathPow(gd_308, gi_244), 2);
   }
   if (StopLoss == 0) {
      l_price_16 = 0;
      l_price_32 = 0;
   } else {
      l_price_16 = l_price_0 - StopLoss * Point;
      l_price_32 = l_price_8 + StopLoss * Point;
   }
   if (TakeProfit == 0) {
      l_price_24 = 0;
      l_price_40 = 0;
   } else {
      l_price_24 = l_price_0 + TakeProfit * Point;
      l_price_40 = l_price_8 - TakeProfit * Point;
   }
   if (gi_240 > 0 && gi_248 < 1 && gi_240 < MaxTrades) OrderSend(Symbol(), OP_BUYLIMIT, g_ord_lots_284, l_price_0, g_slippage_188, l_price_16, l_price_24, "Brain Up Limit", g_magic_228, 0, Green);
   if (gi_244 > 0 && gi_252 < 1 && gi_244 < MaxTrades) OrderSend(Symbol(), OP_SELLLIMIT, g_ord_lots_292, l_price_8, g_slippage_188, l_price_32, l_price_40, "Brain Down Limit", g_magic_228, 0, Red);
   return (GetLastError());
}

int signal() {
   double l_iac_0 = iAC(NULL, PERIOD_H1, 0);
   double l_iac_8 = iAC(NULL, PERIOD_H1, 1);
   double l_irvi_16 = iRVI(NULL, PERIOD_H1, 10, MODE_MAIN, 0);
   double l_irvi_24 = iRVI(NULL, PERIOD_H1, 10, MODE_SIGNAL, 0);
   double l_istochastic_32 = iStochastic(NULL, PERIOD_H1, 8, 3, 3, MODE_EMA, 0, MODE_MAIN, 0);
   double l_istochastic_40 = iStochastic(NULL, PERIOD_H1, 8, 3, 3, MODE_EMA, 0, MODE_SIGNAL, 0);
   double l_iwpr_48 = iWPR(NULL, PERIOD_H1, 3, 0);
   double l_iwpr_56 = iWPR(NULL, PERIOD_H1, 3, 1);
   double l_icustom_64 = iCustom(NULL, PERIOD_H1, "Sniper", 3, 6, 5, 4, 1, 0);
   double l_icustom_72 = iCustom(NULL, PERIOD_H1, "Sniper", 3, 6, 5, 4, 0, 0);
   if ((l_icustom_72 > l_icustom_64 && l_icustom_72 >= 0.0) || l_icustom_64 >= 0.0) {
      if (l_irvi_16 > l_irvi_24 && l_istochastic_32 > l_istochastic_40) {
         if (!Reverse) return (1);
         return (-1);
      }
   }
   if ((l_icustom_72 < l_icustom_64 && l_icustom_72 <= 0.0) || l_icustom_64 <= 0.0) {
      if (l_irvi_16 < l_irvi_24 && l_istochastic_32 < l_istochastic_40) {
         if (!Reverse) return (-1);
         return (1);
      }
   }
   return (0);
}