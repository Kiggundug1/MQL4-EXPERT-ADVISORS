/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2010, Primeval-EA Developers, LLC v1.0"
#property link      "http://www.primeval-ea.com/"

#import "Primeval.dll"
   double fun001(double a0, int a1, double a2, int a3, int a4, double a5, double a6, double a7, int a8, double a9, double a10, double a11);
   int fun002(int a0, int a1, double a2, int a3, double a4, int a5, int a6, double a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14);
   bool fun003(int a0, int a1, int a2, int a3, int a4);
   bool fun004(double a0, int a1, double a2, int a3, double a4, double a5);
   bool fun005(int a0, int a1, int a2, int a3, int a4);
   void fun006(string a0, int a1, int& a2[], int& a3[], int& a4[], int& a5[], double& a6[], double& a7[], double& a8[], double& a9[], double& a10[], int& a11[], int a12);
   void fun007(double a0, double a1, double a2, double a3, double a4, int a5, int a6, double& a7[], double& a8[], double& a9[], double& a10[], int a11, string a12);
   void fun008(double a0, double a1, double a2, double a3, double a4, int a5, int a6, double& a7[], double& a8[], double& a9[], double& a10[], int a11, string a12);
   bool fun009(double a0, double a1, int a2, double a3, int a4, double a5, double a6, double a7, double a8, int a9);
   bool fun010(double a0, double a1, int a2, double a3, int a4, double a5, double a6, double a7, double a8, int a9);
   bool fun011(int a0, int a1, int a2, double a3, double a4, double a5, double a6, int a7, int a8, int a9, int a10, int a11);
   bool fun012(double a0, double a1, double a2, double a3, double a4);
   bool fun013(double a0, double a1, double a2, double a3, double a4, double a5, double a6, int a7, int a8, double a9, double a10, double a11, double a12, int a13, double a14, int a15, string a16, string a17, string a18, int a19);
   bool fun014(double a0, double a1, double a2, double a3, double a4, double a5, double a6, int a7, int a8, double a9, double a10, double a11, double a12, int a13, double a14, int a15, string a16, string a17, string a18, int a19);
   bool fun015(double a0, double a1, double a2, double a3, double a4, double a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, int a13, double a14, int a15, string a16, string a17, string a18, int a19);
   bool fun016(double a0, double a1, double a2, double a3, double a4, double a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, int a13, double a14, int a15, string a16, string a17, string a18, int a19);
   bool fun017(double a0, double a1, double a2, double a3, double a4, double a5, int a6, int a7, double a8, double a9, double a10, double a11, int a12, double a13, int a14, string a15, string a16, string a17, int a18);
   bool fun018(double a0, double a1, double a2, double a3, double a4, double a5, int a6, int a7, double a8, double a9, double a10, double a11, int a12, double a13, int a14, string a15, string a16, string a17, int a18);
   void fun019(string a0, int& a1[], int& a2[], int& a3[], int& a4[], double& a5[], int& a6[], int& a7[], int& a8[], int& a9[], int& a10[], int& a11[], int& a12[], int& a13[], int& a14[], int& a15[]);
   bool fun020(double a0, double a1, double a2, double a3, double a4, int a5, string a6, string a7, string a8, int a9);
   bool fun021(double a0, double a1, double a2, double a3, double a4, int a5, string a6, string a7, string a8, int a9);
   void fun022(string a0, double& a1[], double& a2[], double& a3[], double& a4[], double& a5[], double& a6[], int a7);
   double fun023(int a0, int a1, double a2, double a3, double a4);
   bool fun024(double a0, double a1, double a2, double a3, double a4, double a5, double a6, int a7, string a8, string a9, string a10, int a11);
   bool fun025(double a0, double a1, double a2, double a3, double a4, double a5, double a6, int a7, string a8, string a9, string a10, int a11);
   void fun026(string a0, int& a1[], int& a2[], int& a3[], int& a4[], int& a5[], int& a6[], int& a7[], int& a8[], int& a9[], double& a10[], double& a11[], int& a12[], int& a13[], int& a14[]);
   int fun027(string a0, int a1);
   void fun029(bool a0, double a1, int a2, int& a3[], double& a4[], double& a5[], double& a6[], int& a7[]);
   int fun030(double a0, double a1, double& a2[], double& a3[], int& a4[], double a5, int& a6[], int a7, int& a8[], int a9, double a10, int a11, string a12, string a13, string a14, int a15);
   bool fun031(double& a0[], double a1, double a2, int a3, int a4, bool& a5[]);
   bool fun032(int a0, double a1, double a2, double a3, int a4, int a5, int a6, double a7);
   void fun033(double a0, double a1, int a2, double& a3[], double& a4[], double& a5[]);
   bool fun034(double a0, double a1, int a2, double a3, double a4, double a5, int a6, string a7, string a8, string a9, int a10);
   int fun035(int a0, double a1, double a2, string a3, double a4, double a5, double& a6[], int& a7[], int& a8[]);
   bool fun036(int a0, int a1, double a2, double a3, int a4, double a5, int a6, int a7, int a8, double a9, double a10, int a11, double a12, int a13, string a14, string a15, string a16, int a17);
   void fun037(int& a0[], double a1, int& a2[]);
   void fun038(int& a0[], double a1, double a2, int& a3[]);
   void fun039(double a0, double a1, double a2, double a3, double a4, double a5, int& a6[], double a7, int a8, string a9, string a10, string a11, int a12);
   void fun040(int a0, int a1, double a2, double a3, double a4, int& a5[], double a6, int a7, string a8, string a9, string a10, int a11);
   bool fun041(int a0, double a1, double a2, double a3, double a4, int a5, string a6, string a7, string a8, int a9);
   bool fun042(int a0, double a1, double a2, double a3, double a4, int a5, string a6, string a7, string a8, int a9);
   bool fun043(double a0, double a1, double a2, double a3, double a4, int a5, string a6, string a7, string a8, int a9);
   bool fun044(string a0, int a1, int a2, int a3, int a4, int a5, int a6);
   string fun045(int a0);
   void fun046(string a0, int& a1[]);
   bool fun000(double a0, int a1, string a2, string a3, string a4, int a5);
#import "wininet.dll"
   int InternetOpenA(string a0, int a1, string a2, string a3, int a4);
   int InternetOpenUrlA(int a0, string a1, string a2, int a3, int a4, int a5);
   int InternetReadFile(int a0, string a1, int a2, int& a3[]);
   int InternetCloseHandle(int a0);
#import

extern string _A = "STRATEGY SELECTION";
extern bool GBPUSD_Hedging_Strategy = FALSE;
extern bool EURCHF_Grid_Strategy = FALSE;
extern string _B = "TIME MANAGEMENT";
extern bool UseAutoGMTOffset = TRUE;
extern int ManualGMTOffset = 2;
int gi_108 = -100;
extern string _C = "ORDER MANAGEMENT";
extern bool MoneyManagement = TRUE;
extern double LotSize = 0.1;
extern double MinLots = 0.01;
extern double MaxLots = 100.0;
extern bool TradeMicroLots = TRUE;
extern string _D = "RISK MANAGEMENT";
extern int RiskLevel = 10;
extern string _E = "SYSTEM PARAMETERS";
extern bool NFA_Compliant = FALSE;
extern bool EnableTrading = TRUE;
extern bool GBPUSD_Hedging_CloseAll = FALSE;
extern double Slippage = 2.0;
extern double MaxSpread = 8.0;
extern int MarginCutOffPercent = 60;
extern bool SendEmail = FALSE;
extern bool SendTradingStatistics = FALSE;
extern int TradingStatisticsHour = 15;
extern string ExpertComment = "Primeval-EA";
extern string _F = "MANUAL TRADES";
extern bool EnableClosingManualTrades = FALSE;
extern bool EnableTrailingStops = TRUE;
extern int TrailingStopStart = 14;
extern int TrailingStopPriceSteps = 2;
extern int TrailingStopPosSteps = 1;
extern string _G = "ORDERS ALERTS";
extern bool SoundAlert = TRUE;
extern string SoundFileAtBuy = "alert.wav";
extern string SoundFileAtSell = "alert.wav";
extern string SoundFileAtClose = "ok.wav";
int g_color_288 = Green;
int g_color_292 = Red;
int g_color_296 = Violet;
extern string _H = "EA REGISTRATION";
extern double KEY = 2010.0;
string gs_316;
double g_spread_324;
int g_ticket_332 = -1;
bool gi_336 = TRUE;
int gi_340;
int gi_344 = 5;
int gi_348 = 15;
bool gi_352 = FALSE;
int gi_356 = 0;
int gi_unused_360 = 25;
int gi_unused_364 = 20;
int gi_unused_368 = 35;
int gi_unused_372 = 30;
string gs_unused_376 = "Wingdings";
int gi_unused_384 = 15;
int g_fontsize_388 = 8;
string gs_tacoma_392 = "Tacoma";
int g_color_400 = White;
int gi_unused_404 = 221;
int gi_unused_408 = 222;
int gi_unused_412 = 163;
int gi_unused_416 = 32768;
int gi_unused_420 = 255;
int gi_unused_424 = 0;
bool gi_428 = TRUE;
double gd_432;
double gd_440;
double g_lotstep_448;
double gd_456;
int g_acc_number_464;
string gsa_468[3];
int g_bool_472;
bool gi_476 = FALSE;
bool gi_480 = FALSE;
bool gi_484 = TRUE;
int gi_488 = 10;
int gi_492 = 35;
int gi_496 = 5;
int gi_500 = 5;
bool gi_504 = TRUE;
bool gi_508 = FALSE;
int g_magic_512 = 19851031;
double gda_516[5][4];
int gi_520 = 8;
int gi_524 = 17;
int gi_528 = 20;
int gi_532 = 29;
int gi_536 = 37;
int g_period_540 = 11;
int g_period_544 = 38;
double gd_548 = 53.0;
double gd_556 = 48.0;
double g_lots_564;
bool gba_572[2];
int gi_576 = 90;
int gi_580 = 0;
int gi_584 = -14;
int gi_588 = 8100;
int gi_592 = 10800;
int gi_596 = 12600;
int gi_600 = 20;
int gi_604 = 0;
int g_magic_608 = -1264664266;
int gi_612;
double gd_616;
string g_symbol_624;
int gi_632;
int gi_636;
int gi_unused_640;
int gi_unused_644;
int gi_648;
int gi_652;
int gi_656;
int gi_660;
int gi_664;
int gi_668;
int gi_672;
int gi_676;
int gi_680;
int gi_684;
int gi_688;
int gi_692;
int gi_696;
int gi_700;
int gi_704;
double gd_708;
double gd_716;
double gd_724;
double gd_732;
double gd_740;
double gd_748;
double gd_756;
double gd_764;
int gi_772 = 1;
int gi_776 = 30;
int gi_780 = 15;
int gi_784 = 22;
int gi_788 = 24;
double gd_792 = 70.0;
double gd_800 = 64.0;
double gd_808 = 30.0;
double gd_816 = 36.0;
double gd_824 = 100.15;
int g_magic_832 = 784610;
int g_magic_836 = 1331580;
int gi_unused_840 = 1;
int gi_844 = 2;
double gd_848 = 0.0001;
double gd_unused_856 = 4.0;
bool gi_864 = TRUE;
bool gi_868 = TRUE;
double gd_872 = 32.0;
int gi_880 = 32;
int gi_884 = 15;
bool gi_888 = TRUE;
bool gi_892 = TRUE;
bool gi_896 = TRUE;
bool gi_900 = TRUE;
bool gi_904 = TRUE;
bool gi_908 = TRUE;
int gi_912 = 0;
int g_count_916 = 0;
int g_count_920 = 0;
int g_count_924 = 0;
int g_count_928 = 0;
int g_count_932 = 0;
double gd_unused_936 = 0.0;
double gd_944 = 0.0;
int gi_952 = 0;
double gd_956 = 0.0;
int gi_964 = 0;
string gs_dummy_968;
int g_ticket_976;
int g_ticket_980;
int g_ticket_984;
int g_ticket_988;
int g_ticket_992;
int g_ticket_996;
double g_ifractals_1000;
double g_ifractals_1008;
double g_ifractals_1016;
double g_ifractals_1024;
int gi_1032;
int gi_1036 = 0;
int gi_1044;
int g_hour_1048;
int gi_1052;
int g_stoplevel_1056;
double gd_1060;
double g_irsi_1068;
double g_irsi_1076;
double g_icci_1084;
double g_ima_1092;
int g_shift_1100;
double g_ihigh_1104 = 0.0;
double g_ilow_1112 = 0.0;
int g_ticket_1124 = -1;
int g_ticket_1128 = -1;
int g_datetime_1132 = 0;
int g_datetime_1136 = 0;
int gi_1140 = 45;
int gia_1144[500];
int gi_1148;
double gda_1152[85];
double gda_1156[85];
int gia_1160[85];
int gi_1164 = 0;
int gi_1168 = 0;
double gd_1172 = 0.0;
int gi_1180 = 80;
bool gi_1184 = FALSE;
double gd_1188;
double gd_1196;
int g_magic_1204 = 87851;
int g_magic_1208 = 87861;
string g_var_name_1212 = "PRIMEVAL_GLOBAL_VAR_0";
string g_var_name_1220 = "PRIMEVAL_GLOBAL_VAR_1";
string g_var_name_1228 = "PRIMEVAL_GLOBAL_VAR_2";
string g_var_name_1236 = "PRIMEVAL_GLOBAL_VAR_3";
string g_var_name_1244 = "PRIMEVAL_GLOBAL_VAR_4";
string g_var_name_1252 = "PRIMEVAL_GLOBAL_VAR_5";
string g_var_name_1260 = "PRIMEVAL_GLOBAL_VAR_6";
string g_var_name_1268 = "PRIMEVAL_GLOBAL_VAR_7";
string g_var_name_1276 = "PRIMEVAL_GLOBAL_VAR_8";
string g_var_name_1284 = "PRIMEVAL_GLOBAL_VAR_9";
string g_var_name_1292 = "PRIMEVAL_GLOBAL_VAR_10";
string gs_1300 = "PRIMEVAL_GLOBAL_VAR_11";
string gs_1308 = "PRIMEVAL_GLOBAL_VAR_12";
string g_var_name_1316 = "PRIMEVAL_GLOBAL_VAR_13";
string g_var_name_1324 = "PRIMEVAL_GLOBAL_VAR_14";
string g_var_name_1332 = "PRIMEVAL_GLOBAL_VAR_15";
string gs_1340 = "PRIMEVAL_GLOBAL_VAR_16";
string gs_1348 = "PRIMEVAL_GLOBAL_VAR_17";
string g_var_name_1356 = "PRIMEVAL_GLOBAL_VAR_18";
string g_var_name_1364 = "PRIMEVAL_GLOBAL_VAR_19";
double g_global_var_1372;
double g_global_var_1380;
double g_lots_1388;
double g_lots_1396;
int g_global_var_1404 = 0;
int g_global_var_1408 = 0;
int gi_1412 = 0;
int gi_1416 = 0;
double g_global_var_1420;
int g_global_var_1428 = 0;
int g_global_var_1432 = 0;
int g_global_var_1436 = 0;
int g_global_var_1440 = 0;
int gi_1444 = 0;
int gi_1448 = 0;
int gi_1452 = 0;
bool gi_1456;
bool gi_1460;
double g_iadx_1464;
double g_iadx_1472;
double gd_1480;
double g_ima_1488;
double gd_1496;
double gd_1504;
double gd_1512;
double g_ima_1520;
double gd_1528;
double gd_1536;
double g_ima_1544;
double g_ima_1552;
int g_global_var_1560;
int g_global_var_1564;
int g_global_var_1568;
int g_global_var_1572;
double gd_1576;
int gi_1584;
double gd_1588;
double gd_1596;
int g_count_1604;
bool gi_1608 = FALSE;
bool gi_1612 = FALSE;
bool gi_1616 = TRUE;
int gi_1620 = 200;
int gi_1624 = 160;
double gd_1628;
double gd_1636;
double gd_1644;
double gd_1652;
double gd_1660;
double gd_1668;
double gd_unused_1676;
int g_period_1684 = 1;
int g_period_1688 = 11;
string gs_1692 = "http://www.primeval-ea.com/primeval/GetAutoGMTOffset?hour=";
string gs_1700 = "WinInet GMT";
int gi_1708 = -1;
double g_ord_open_price_1712 = 0.0;
double g_ord_open_price_1720;
double g_ord_open_price_1728 = 0.0;
double g_ord_open_price_1736;
int g_count_1744 = 0;
int g_count_1748 = 0;
int g_datetime_1752 = 0;

int nyusgfj(int a_ticket_0, double a_price_4, double a_price_12, double a_price_20) {
   int l_error_32;
   bool l_bool_36 = FALSE;
   int l_count_28 = 0;
   while (l_count_28 < 5) {
      l_bool_36 = OrderModify(a_ticket_0, a_price_4, a_price_12, a_price_20, 0, Aqua);
      if (l_bool_36) l_count_28 = 5;
      else {
         l_error_32 = GetLastError();
         Print(l_count_28, " Error modifying order : (", fun045(l_error_32), ") ");
         if (l_error_32 > 0/* NO_ERROR */) l_count_28++;
      }
   }
   return (l_bool_36);
}

bool piwejansmj(int a_ticket_0) {
   int l_error_8;
   bool li_ret_12 = FALSE;
   if (!OrderSelect(a_ticket_0, SELECT_BY_TICKET)) return (FALSE);
   int l_count_4 = 0;
   if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
      while (l_count_4 < 10) {
         RefreshRates();
         li_ret_12 = OrderClose(a_ticket_0, OrderLots(), OrderClosePrice(), Slippage, g_color_296);
         if (li_ret_12) l_count_4 = 10;
         else {
            l_error_8 = GetLastError();
            Print(l_count_4, " Error closing order : (", fun045(l_error_8), ") ");
            if (l_error_8 > 0/* NO_ERROR */) l_count_4++;
         }
      }
   } else li_ret_12 = OrderDelete(a_ticket_0);
   if (li_ret_12) {
      if (SoundAlert) PlaySound(SoundFileAtClose);
      if (SendEmail) Send_Email(a_ticket_0, "CLOSE");
   }
   return (li_ret_12);
}

void Send_Email(int a_ticket_0, string as_4) {
   string ls_12;
   string ls_20;
   double l_minlot_28;
   int li_36;
   string ls_40;
   if (OrderSelect(a_ticket_0, SELECT_BY_TICKET)) {
      l_minlot_28 = 0.1;
      li_36 = 1;
      l_minlot_28 = MarketInfo(OrderSymbol(), MODE_MINLOT);
      li_36 = 1;
      if (l_minlot_28 < 0.01) li_36 = 3;
      else
         if (l_minlot_28 < 0.1) li_36 = 2;
      ls_12 = "Primeval-EA Trade Information";
      ls_20 = "Primeval-EA Trade Information";
      ls_40 = jgdsfjg(OrderType());
      ls_20 = ls_20 
      + "\n\nCurrency Pair: " + OrderSymbol();
      ls_20 = ls_20 
      + "\nTime: " + TimeToStr(TimeCurrent(), TIME_DATE|TIME_MINUTES|TIME_SECONDS);
      ls_20 = ls_20 
      + "\nOrder Type: " + ls_40;
      if (as_4 == "OPEN") {
         ls_20 = ls_20 
         + "\nPrice: " + DoubleToStr(OrderOpenPrice(), Digits);
         ls_20 = ls_20 
         + "\nLot Size: " + DoubleToStr(OrderLots(), li_36);
         ls_20 = ls_20 
         + "\nEvent: Trade Opened";
      } else {
         if (as_4 == "MODIFY") {
            ls_20 = ls_20 
            + "\nEvent: Trade Modified";
            ls_20 = ls_20 
            + "\nOrder Current Profit: " + DoubleToStr(zzxvy_s454(OrderTicket()), 1) + " pips (" + DoubleToStr(OrderProfit(), 2) + AccountCurrency() + ")";
         } else {
            if (as_4 == "CLOSE") {
               if (OrderType() == OP_BUYLIMIT || OrderType() == OP_SELLLIMIT) {
                  ls_20 = ls_20 
                  + "\nEvent: Trade Deleted";
               } else {
                  ls_20 = ls_20 
                  + "\nOpen Price: " + DoubleToStr(OrderOpenPrice(), Digits);
                  ls_20 = ls_20 
                  + "\nClose Price: " + DoubleToStr(OrderClosePrice(), Digits);
                  ls_20 = ls_20 
                  + "\nLot Size: " + DoubleToStr(OrderLots(), 1);
                  ls_20 = ls_20 
                  + "\nEvent: Trade Closed";
                  ls_20 = ls_20 
                  + "\nOrder Profit: " + DoubleToStr(zzxvy_s454(OrderTicket()), 1) + " pips (" + DoubleToStr(OrderProfit(), 2) + " " + AccountCurrency() + ")";
               }
            } else {
               if (as_4 == "EXPIRE") {
                  ls_20 = ls_20 
                  + "\nEvent: Trade Expired";
               }
            }
         }
      }
      if (OrdersTotal() > 0) {
         ls_20 = ls_20 
         + "\n\n*****Open Trades*****";
      }
      for (int l_pos_48 = OrdersTotal() - 1; l_pos_48 >= 0; l_pos_48--) {
         OrderSelect(l_pos_48, SELECT_BY_POS, MODE_TRADES);
         l_minlot_28 = MarketInfo(OrderSymbol(), MODE_MINLOT);
         li_36 = 1;
         if (l_minlot_28 < 0.01) li_36 = 3;
         else
            if (l_minlot_28 < 0.1) li_36 = 2;
         ls_20 = ls_20 
         + "\n------------------------";
         ls_20 = ls_20 
         + "\nSymbol: " + OrderSymbol();
         ls_20 = ls_20 
         + "\nOpen Price: " + DoubleToStr(OrderOpenPrice(), 5);
         ls_20 = ls_20 
         + "\nOpen Time: " + TimeToStr(OrderOpenTime(), TIME_DATE|TIME_MINUTES|TIME_SECONDS);
         ls_20 = ls_20 
         + "\nLot Size: " + DoubleToStr(OrderLots(), li_36);
         ls_20 = ls_20 
         + "\nProfit: " + DoubleToStr(OrderProfit(), 2);
         ls_20 = ls_20 
         + "\n------------------------";
      }
      ls_20 = ls_20 
      + "\n\nCurrent Balance: " + DoubleToStr(AccountBalance(), 2) + " " + AccountCurrency();
      ls_20 = ls_20 
      + "\nCurrent Equity: " + DoubleToStr(AccountEquity(), 2) + " " + AccountCurrency();
      SendMail(ls_12, ls_20);
   }
}

int SendTradingStatistics() {
   int li_52;
   if (Hour() != TradingStatisticsHour || TimeCurrent() - gi_356 <= 86400) return (0);
   string ls_0 = "Primeval-EA Daily Trading Statistics";
   string ls_8 = "Primeval-EA Trading Statistics - " + TimeToStr(TimeCurrent(), TIME_DATE|TIME_MINUTES|TIME_SECONDS);
   double ld_16 = 0;
   double ld_24 = 0;
   double ld_32 = 0;
   double ld_40 = 0;
   int l_count_48 = 0;
   int l_count_56 = 0;
   for (int l_pos_60 = OrdersHistoryTotal() - 1; l_pos_60 >= 0; l_pos_60--) {
      OrderSelect(l_pos_60, SELECT_BY_POS, MODE_HISTORY);
      if (TimeCurrent() - OrderCloseTime() <= 86400) {
         if (OrderProfit() >= 0.0) {
            ld_24 += OrderProfit();
            li_52++;
         } else {
            ld_32 += OrderProfit();
            l_count_56++;
         }
         ld_40 += zzxvy_s454(OrderTicket());
         l_count_48++;
      }
   }
   ld_16 = ld_24 + ld_32;
   ls_8 = ls_8 
   + "\n\n*****Closed Trades*****";
   ls_8 = ls_8 
   + "\n------------------------";
   ls_8 = ls_8 
   + "\nTotal Profit: " + DoubleToStr(ld_16, 2) + " " + AccountCurrency();
   ls_8 = ls_8 
   + "\nProfit/Loss in Pips: " + DoubleToStr(ld_40, 1);
   ls_8 = ls_8 
   + "\nGross Profit: " + DoubleToStr(ld_24, 2) + " " + AccountCurrency();
   ls_8 = ls_8 
   + "\nGross Loss: " + DoubleToStr(ld_32, 2) + " " + AccountCurrency();
   ls_8 = ls_8 
   + "\nTotal Trades: " + l_count_48;
   ls_8 = ls_8 
   + "\nProfit Trades: " + li_52;
   ls_8 = ls_8 
   + "\nLoss Trades: " + l_count_56;
   ls_8 = ls_8 
   + "\n------------------------";
   ld_16 = 0;
   ld_24 = 0;
   ld_32 = 0;
   ld_40 = 0;
   l_count_48 = 0;
   for (l_pos_60 = OrdersTotal() - 1; l_pos_60 >= 0; l_pos_60--) {
      OrderSelect(l_pos_60, SELECT_BY_POS, MODE_TRADES);
      if (OrderProfit() >= 0.0) ld_24 += OrderProfit();
      else ld_32 += OrderProfit();
      ld_40 += zzxvy_s454(OrderTicket());
      l_count_48++;
   }
   ld_16 = ld_24 + ld_32;
   ls_8 = ls_8 
   + "\n\n*****Open Trades*****";
   ls_8 = ls_8 
   + "\n------------------------";
   if (l_count_48 > 0) {
      ls_8 = ls_8 
      + "\nTotal Profit: " + DoubleToStr(ld_16, 2) + " " + AccountCurrency();
      ls_8 = ls_8 
      + "\nProfit/Loss in Pips: " + DoubleToStr(ld_40, 1);
      ls_8 = ls_8 
      + "\nGross Profit: " + DoubleToStr(ld_24, 2) + " " + AccountCurrency();
      ls_8 = ls_8 
      + "\nGross Loss: " + DoubleToStr(ld_32, 2) + " " + AccountCurrency();
      ls_8 = ls_8 
      + "\nTotal Trades: " + l_count_48;
   } else {
      ls_8 = ls_8 
      + "\nNONE";
   }
   ls_8 = ls_8 
   + "\n------------------------";
   ls_8 = ls_8 
   + "\n\nCurrent Balance: " + DoubleToStr(AccountBalance(), 2) + " " + AccountCurrency();
   ls_8 = ls_8 
   + "\nCurrent Equity: " + DoubleToStr(AccountEquity(), 2) + " " + AccountCurrency();
   gi_356 = TimeCurrent() - 60;
   SendMail(ls_0, ls_8);
   return (1);
}

void jr654ej_Send_Email(int ai_unused_0, double ad_4, double ad_12) {
   double ld_20 = ad_4 + ad_12;
   string ls_28 = "Primeval-EA Trade Information";
   string ls_36 = "Primeval-EA Trade Information";
   ls_36 = ls_36 
   + "\nCurrency Pair: " + OrderSymbol();
   ls_36 = ls_36 
   + "\nTime: " + TimeToStr(TimeCurrent(), TIME_DATE|TIME_MINUTES|TIME_SECONDS);
   ls_36 = ls_36 
   + "\nEvent: Trades Closed";
   ls_36 = ls_36 
   + "\nGross Profit: " + ad_4;
   ls_36 = ls_36 
   + "\nGross Loss: " + ad_12;
   ls_36 = ls_36 
   + "\nTotal Net Profit: " + ld_20;
   if (OrdersTotal() > 0) {
      ls_36 = ls_36 
      + "\n*****Open Trades*****";
   }
   for (int l_pos_44 = OrdersTotal() - 1; l_pos_44 >= 0; l_pos_44--) {
      OrderSelect(l_pos_44, SELECT_BY_POS, MODE_TRADES);
      ls_36 = ls_36 
      + "\n------------------------";
      ls_36 = ls_36 
      + "\nOrder Symbol: " + OrderSymbol();
      ls_36 = ls_36 
      + "\nOrder Open Price: " + DoubleToStr(OrderOpenPrice(), 5);
      ls_36 = ls_36 
      + "\nOrder Profit: " + DoubleToStr(OrderProfit(), 2);
      ls_36 = ls_36 
      + "\n------------------------";
   }
   ls_36 = ls_36 
   + "\nCurrent Balance: " + DoubleToStr(AccountBalance(), 2) + " " + AccountCurrency();
   ls_36 = ls_36 
   + "\nCurrent Equity: " + DoubleToStr(AccountEquity(), 2) + " " + AccountCurrency();
   SendMail(ls_28, ls_36);
}

double zzxvy_s454(int a_ticket_0) {
   double ld_4 = 0;
   if (OrderSelect(a_ticket_0, SELECT_BY_TICKET) && OrderType() == OP_BUY || OrderType() == OP_SELL) {
      ld_4 = MathAbs((OrderOpenPrice() - OrderClosePrice()) / MarketInfo(OrderSymbol(), MODE_POINT));
      if (OrderType() == OP_BUY && OrderOpenPrice() > OrderClosePrice()) ld_4 = -ld_4;
      else
         if (OrderType() == OP_SELL && OrderOpenPrice() < OrderClosePrice()) ld_4 = -ld_4;
   }
   if (Digits == 5 || Digits == 3) ld_4 /= 10.0;
   return (NormalizeDouble(ld_4, 1));
}

string jgdsfjg(int ai_0) {
   string ls_ret_4;
   switch (ai_0) {
   case 0:
      ls_ret_4 = "Buy";
      break;
   case 1:
      ls_ret_4 = "Sell";
      break;
   case 2:
      ls_ret_4 = "BuyLimit";
      break;
   case 3:
      ls_ret_4 = "SellLimit";
      break;
   case 4:
      ls_ret_4 = "BuyStop";
      break;
   case 5:
      ls_ret_4 = "SellStop";
      break;
   default:
      ls_ret_4 = "Unknown";
   }
   return (ls_ret_4);
}

void jsahdjas() {
   ObjectCreate("Pair Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Pair Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Pair Label", OBJPROP_YDISTANCE, 40);
   ObjectSetText("Pair Label", "Current Pair:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Current Pair", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Current Pair", OBJPROP_XDISTANCE, 115);
   ObjectSet("Current Pair", OBJPROP_YDISTANCE, 40);
   ObjectSetText("Current Pair", Symbol(), g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Spread Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Spread Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Spread Label", OBJPROP_YDISTANCE, 60);
   ObjectSetText("Spread Label", "Bid/Ask Spread:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Bid/Ask Spread", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Bid/Ask Spread", OBJPROP_XDISTANCE, 115);
   ObjectSet("Bid/Ask Spread", OBJPROP_YDISTANCE, 60);
   ObjectSetText("Bid/Ask Spread", DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0), g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("GMT Offset Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("GMT Offset Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("GMT Offset Label", OBJPROP_YDISTANCE, 80);
   ObjectSetText("GMT Offset Label", "GMT Offset:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("GMT Offset", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("GMT Offset", OBJPROP_XDISTANCE, 115);
   ObjectSet("GMT Offset", OBJPROP_YDISTANCE, 80);
   if (UseAutoGMTOffset) ObjectSetText("GMT Offset", DoubleToStr(gi_108, 0) + " (automatic)", g_fontsize_388, gs_tacoma_392, g_color_400);
   else ObjectSetText("GMT Offset", DoubleToStr(gi_108, 0) + " (manual)", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Nº Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Nº Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Account Nº Label", OBJPROP_YDISTANCE, 100);
   ObjectSetText("Account Nº Label", "Account Number:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Number", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Number", OBJPROP_XDISTANCE, 115);
   ObjectSet("Account Number", OBJPROP_YDISTANCE, 100);
   ObjectSetText("Account Number", DoubleToStr(AccountNumber(), 0), g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Name Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Name Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Account Name Label", OBJPROP_YDISTANCE, 120);
   ObjectSetText("Account Name Label", "Account Name:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Name", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Name", OBJPROP_XDISTANCE, 115);
   ObjectSet("Account Name", OBJPROP_YDISTANCE, 120);
   ObjectSetText("Account Name", AccountName(), g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Leverage Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Leverage Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Account Leverage Label", OBJPROP_YDISTANCE, 140);
   ObjectSetText("Account Leverage Label", "Account Leverage:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Leverage", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Leverage", OBJPROP_XDISTANCE, 115);
   ObjectSet("Account Leverage", OBJPROP_YDISTANCE, 140);
   ObjectSetText("Account Leverage", "1:" + DoubleToStr(AccountLeverage(), 0), g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Company Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Company Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Account Company Label", OBJPROP_YDISTANCE, 160);
   ObjectSetText("Account Company Label", "Account Company:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Company", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Company", OBJPROP_XDISTANCE, 115);
   ObjectSet("Account Company", OBJPROP_YDISTANCE, 160);
   ObjectSetText("Account Company", AccountCompany(), g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Currency Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Currency Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Account Currency Label", OBJPROP_YDISTANCE, 180);
   ObjectSetText("Account Currency Label", "Account Currency:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Currency", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Currency", OBJPROP_XDISTANCE, 115);
   ObjectSet("Account Currency", OBJPROP_YDISTANCE, 180);
   ObjectSetText("Account Currency", AccountCurrency(), g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Balance Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Balance Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Account Balance Label", OBJPROP_YDISTANCE, 200);
   ObjectSetText("Account Balance Label", "Account Balance:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Balance", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Balance", OBJPROP_XDISTANCE, 115);
   ObjectSet("Account Balance", OBJPROP_YDISTANCE, 200);
   ObjectSetText("Account Balance", DoubleToStr(AccountBalance(), 2), g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Equity Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Equity Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Account Equity Label", OBJPROP_YDISTANCE, 220);
   ObjectSetText("Account Equity Label", "Account Equity:", g_fontsize_388, gs_tacoma_392, g_color_400);
   ObjectCreate("Account Equity", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Account Equity", OBJPROP_XDISTANCE, 115);
   ObjectSet("Account Equity", OBJPROP_YDISTANCE, 220);
   ObjectSetText("Account Equity", DoubleToStr(AccountEquity(), 2), g_fontsize_388, gs_tacoma_392, g_color_400);
   if (gi_428) IUASUDHF_JSADHF();
   ujdfa78dk();
}

void IUASUDHF_JSADHF() {
   string ls_unused_4;
   int l_window_12;
   string lsa_16[4] = {"Frankfurt", "London", "New York", "Toyko",
   "Sydney"};
   int lia_20[4] = {7, 8, 12, 23,
   21};
   int lia_24[5] = {15, 16, 20, 8, 6};
   ObjectCreate("Current Session Label", OBJ_LABEL, 0, 0, 0, 0, 0);
   ObjectSet("Current Session Label", OBJPROP_XDISTANCE, 20);
   ObjectSet("Current Session Label", OBJPROP_YDISTANCE, 242);
   int li_28 = Hour() - gi_108;
   if (li_28 < 0) li_28 += 24;
   if (li_28 == 23 || (li_28 >= 0 && li_28 <= 6)) ObjectSetText("Current Session Label", "ASIAN SESSION", 8, gs_tacoma_392, SkyBlue);
   else {
      if (li_28 == 7) ObjectSetText("Current Session Label", "ASIAN && EUROPEAN SESSIONS OVERLAPPED", 8, gs_tacoma_392, SkyBlue);
      else {
         if (li_28 >= 8 && li_28 <= 11) ObjectSetText("Current Session Label", "EUROPEAN SESSION", 8, gs_tacoma_392, SkyBlue);
         else {
            if (li_28 >= 12 && li_28 < 16) ObjectSetText("Current Session Label", "EUROPEAN && NORTH AMERICAN SESSIONS OVERLAPPED", 8, gs_tacoma_392, SkyBlue);
            else {
               if (li_28 >= 16 && li_28 < 20) ObjectSetText("Current Session Label", "NORTH AMERICAN SESSION", 8, gs_tacoma_392, SkyBlue);
               else
                  if (li_28 >= 20 && li_28 < 23) ObjectSetText("Current Session Label", "PRE ASIAN SESSION", 8, gs_tacoma_392, SkyBlue);
            }
         }
      }
   }
   for (int l_index_0 = 0; l_index_0 < ArraySize(lsa_16); l_index_0++) {
      ObjectCreate(lsa_16[l_index_0] + " Market", OBJ_LABEL, 0, 0, 0, 0, 0);
      ObjectSet(lsa_16[l_index_0] + " Market", OBJPROP_XDISTANCE, 50 * l_index_0 + 20);
      ObjectSet(lsa_16[l_index_0] + " Market", OBJPROP_YDISTANCE, 260);
      ObjectSetText(lsa_16[l_index_0] + " Market", lsa_16[l_index_0], g_fontsize_388, gs_tacoma_392, g_color_400);
      ObjectCreate(lsa_16[l_index_0] + " Market Status", OBJ_LABEL, l_window_12, 0, 0, 0, 0);
      ObjectSet(lsa_16[l_index_0] + " Market Status", OBJPROP_XDISTANCE, 50 * l_index_0 + 20);
      ObjectSet(lsa_16[l_index_0] + " Market Status", OBJPROP_YDISTANCE, 280);
      if (lia_20[l_index_0] < lia_24[l_index_0] && (li_28 >= lia_20[l_index_0] && li_28 < lia_24[l_index_0])) ObjectSetText(lsa_16[l_index_0] + " Market Status", "OPEN", g_fontsize_388, gs_tacoma_392, Yellow);
      else {
         if (lia_20[l_index_0] > lia_24[l_index_0] && li_28 >= lia_20[l_index_0] || li_28 < lia_24[l_index_0]) ObjectSetText(lsa_16[l_index_0] + " Market Status", "OPEN", g_fontsize_388, gs_tacoma_392, Yellow);
         else ObjectSetText(lsa_16[l_index_0] + " Market Status", "CLOSED", g_fontsize_388, gs_tacoma_392, Violet);
      }
   }
}

void ujdfa78dk() {
   int l_icustom_0 = iCustom(NULL, 0, "Five EMA CrossOver", 2, 0);
   ObjectDelete("UpArrow");
   ObjectDelete("DownArrow");
   ObjectDelete("StopSignal");
   if (l_icustom_0 == 1) {
      ObjectCreate("UpArrow", OBJ_ARROW, 0, TimeCurrent() + 60 * Period(), Bid);
      ObjectSet("UpArrow", OBJPROP_ARROWCODE, SYMBOL_ARROWUP);
      ObjectSet("UpArrow", OBJPROP_COLOR, White);
      return;
   }
   if (l_icustom_0 == -1) {
      ObjectCreate("DownArrow", OBJ_ARROW, 0, TimeCurrent() + 60 * Period(), Ask);
      ObjectSet("DownArrow", OBJPROP_ARROWCODE, SYMBOL_ARROWDOWN);
      ObjectSet("DownArrow", OBJPROP_COLOR, White);
      return;
   }
   if (l_icustom_0 == 0) {
      ObjectCreate("StopSignal", OBJ_ARROW, 0, TimeCurrent() + 60 * Period(), Ask - MarketInfo(Symbol(), MODE_SPREAD) / 8.0 * Point);
      ObjectSet("StopSignal", OBJPROP_ARROWCODE, SYMBOL_STOPSIGN);
      ObjectSet("StopSignal", OBJPROP_COLOR, White);
   }
}

int init() {
   double lda_0[1];
   double lda_4[1];
   double lda_8[1];
   double lda_12[1];
   double lda_16[1];
   double lda_20[1];
   int lia_28[1];
   int lia_32[1];
   int lia_36[1];
   int lia_40[1];
   int lia_44[1];
   int lia_48[1];
   int lia_52[1];
   int lia_56[1];
   int lia_60[1];
   double lda_64[1];
   double lda_68[1];
   int lia_72[1];
   int lia_76[1];
   int lia_80[1];
   int lia_84[1];
   int lia_88[1];
   int lia_92[1];
   int lia_96[1];
   double lda_100[1];
   int lia_104[1];
   int lia_108[1];
   int lia_112[1];
   int lia_116[1];
   int lia_120[1];
   int lia_124[1];
   int lia_128[1];
   int lia_132[1];
   int lia_136[1];
   int lia_140[1];
   int lia_144[1];
   double lda_148[1];
   if (!IsDllsAllowed()) {
      Comment("Error: Set Parameter \"Allow DLL Imports\" ON in menu Tools -> Options -> Expert Advisors.");
      return (-1);
   }
   g_acc_number_464 = AccountNumber();
   gsa_468[0] = AccountName();
   gsa_468[1] = AccountCompany();
   gsa_468[2] = AccountCurrency();
   g_bool_472 = IsDemo();
   if (!fun000(KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
      Comment("Not Authenticated");
      gi_476 = FALSE;
      Alert("Your license key is invalid. Please activate your copy in the member\'s area." 
         + "\n" 
         + "Account Number     = " + g_acc_number_464 
         + "\n" 
         + "Account Name        = " + gsa_468[0] 
         + "\n" 
         + "Account Company  = " + gsa_468[1] 
         + "\n" 
      + "Account Currency  = " + gsa_468[2]);
      return (-1);
   }
   gi_476 = TRUE;
   Comment("Authenticated");
   gs_316 = StringSubstr(Symbol(), 0, 6);
   if (Digits == 5 || Digits == 3) {
      gi_508 = TRUE;
      MaxSpread = 10.0 * MaxSpread;
   }
   if (TradeMicroLots) gi_772 = 2;
   else gi_772 = 1;
   g_symbol_624 = Symbol();
   gd_432 = MarketInfo(g_symbol_624, MODE_MAXLOT);
   if (MaxLots < gd_432) gd_432 = MaxLots;
   gd_440 = MarketInfo(g_symbol_624, MODE_MINLOT);
   if (MinLots > gd_440) gd_440 = MinLots;
   g_lotstep_448 = MarketInfo(g_symbol_624, MODE_LOTSTEP);
   gd_456 = MarketInfo(g_symbol_624, MODE_MARGINREQUIRED) * g_lotstep_448;
   fun022(gs_316, lda_0, lda_4, lda_8, lda_12, lda_16, lda_20, EURCHF_Grid_Strategy);
   gd_1628 = lda_0[0];
   gd_1636 = lda_4[0];
   gd_1644 = lda_8[0];
   gd_1652 = lda_12[0];
   gd_1660 = lda_16[0];
   gd_1668 = lda_20[0];
   gi_356 = 0;
   for (int l_pos_24 = OrdersTotal() - 1; l_pos_24 >= 0; l_pos_24--) {
      OrderSelect(l_pos_24, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == g_magic_512 && OrderCloseTime() == 0) {
         g_ticket_332 = OrderTicket();
         break;
      }
   }
   fun026(gs_316, lia_28, lia_32, lia_36, lia_40, lia_44, lia_48, lia_52, lia_56, lia_60, lda_64, lda_68, lia_72, lia_76, lia_80);
   gi_488 = lia_28[0];
   gi_492 = lia_32[0];
   gi_584 = lia_36[0];
   gi_348 = lia_40[0];
   gi_340 = lia_44[0];
   gi_344 = lia_48[0];
   gi_588 = lia_52[0];
   gi_592 = lia_56[0];
   gi_596 = lia_60[0];
   gd_548 = lda_64[0];
   gd_556 = lda_68[0];
   gi_600 = lia_72[0];
   gi_604 = lia_76[0];
   gi_504 = lia_80[0];
   if (gi_508) {
      gi_496 = 10 * gi_496;
      gi_500 = 10 * gi_500;
      gi_488 = 10 * gi_488;
      gi_492 = 10 * gi_492;
      TrailingStopStart = 10 * TrailingStopStart;
      TrailingStopPriceSteps = 10 * TrailingStopPriceSteps;
      TrailingStopPosSteps = 10 * TrailingStopPosSteps;
   }
   if (Digits < 4) {
      gd_616 = 0.01;
      gi_612 = 2;
   } else {
      gd_616 = 0.0001;
      gi_612 = 4;
   }
   fun019(gs_316, lia_84, lia_88, lia_92, lia_96, lda_100, lia_104, lia_108, lia_112, lia_116, lia_120, lia_124, lia_128, lia_132, lia_136, lia_140);
   g_magic_608 = lia_84[0];
   gi_632 = lia_88[0];
   gi_636 = lia_92[0];
   gi_unused_640 = lia_96[0];
   gi_unused_644 = lia_104[0];
   gi_652 = lia_108[0];
   gi_660 = lia_112[0];
   gi_668 = lia_116[0];
   gi_676 = lia_120[0];
   gi_648 = lia_124[0];
   gi_656 = lia_128[0];
   gi_664 = lia_132[0];
   gi_672 = lia_136[0];
   gi_680 = lia_140[0];
   gd_716 = (-1 * gi_636) * gd_616;
   gd_708 = gi_632 * gd_616;
   gi_684 = 60 * gi_652;
   gi_688 = 60 * gi_660;
   gi_692 = 60 * gi_668;
   gi_696 = 60 * gi_676;
   gd_724 = gi_648 * gd_616;
   gd_732 = gi_656 * gd_616;
   gd_740 = gi_664 * gd_616;
   gd_748 = gi_672 * gd_616;
   gd_756 = gi_680 * gd_616;
   gd_764 = (MarketInfo(g_symbol_624, MODE_SPREAD) + 0.1) * Point;
   if (!EURCHF_Grid_Strategy) gi_1032 = 12345678;
   else gi_1032 = 340843;
   fun029(gi_508, Point, Digits, lia_144, lda_148, gda_1152, gda_1156, gia_1160);
   gi_1140 = lia_144[0];
   gd_1172 = lda_148[0];
   if (IsTesting()) GlobalVariablesDeleteAll();
   HideTestIndicators(TRUE);
   gi_1448 = GlobalVariableGet(g_var_name_1324);
   if (GetLastError() != 0/* NO_ERROR */) {
      gi_1448 = 0;
      GlobalVariableSet(g_var_name_1324, 0);
   }
   gi_1452 = GlobalVariableGet(g_var_name_1364);
   if (GetLastError() != 0/* NO_ERROR */) {
      gi_1452 = 0;
      GlobalVariableSet(g_var_name_1364, 0);
   }
   gi_1444 = GlobalVariableGet(g_var_name_1252);
   if (GetLastError() != 0/* NO_ERROR */) {
      gi_1444 = 0;
      GlobalVariableSet(g_var_name_1252, 0);
   }
   g_lots_1388 = LotSize;
   g_lots_1396 = LotSize;
   g_global_var_1372 = GlobalVariableGet(g_var_name_1316);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1372 = 0;
      GlobalVariableSet(g_var_name_1316, 0);
   }
   g_global_var_1380 = GlobalVariableGet(g_var_name_1356);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1380 = 0;
      GlobalVariableSet(g_var_name_1356, 0);
   }
   g_global_var_1404 = GlobalVariableGet(g_var_name_1292);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1404 = 0;
      GlobalVariableSet(g_var_name_1292, g_global_var_1404);
   }
   g_global_var_1408 = GlobalVariableGet(g_var_name_1332);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1408 = 0;
      GlobalVariableSet(g_var_name_1332, g_global_var_1408);
   }
   g_global_var_1420 = GlobalVariableGet(g_var_name_1212);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1420 = AccountEquity();
      GlobalVariableSet(g_var_name_1212, g_global_var_1420);
   }
   g_global_var_1432 = GlobalVariableGet(g_var_name_1220);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1432 = 0;
      GlobalVariableSet(g_var_name_1220, g_global_var_1432);
   }
   g_global_var_1428 = GlobalVariableGet(g_var_name_1228);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1428 = 0;
      GlobalVariableSet(g_var_name_1228, g_global_var_1428);
   }
   g_global_var_1440 = GlobalVariableGet(g_var_name_1236);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1440 = 0;
      GlobalVariableSet(g_var_name_1236, g_global_var_1440);
   }
   g_global_var_1436 = GlobalVariableGet(g_var_name_1244);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1436 = 0;
      GlobalVariableSet(g_var_name_1244, g_global_var_1436);
   }
   g_global_var_1560 = GlobalVariableGet(g_var_name_1260);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1560 = 0;
      GlobalVariableSet(g_var_name_1260, g_global_var_1560);
   }
   g_global_var_1564 = GlobalVariableGet(g_var_name_1268);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1564 = 0;
      GlobalVariableSet(g_var_name_1268, g_global_var_1564);
   }
   g_global_var_1568 = GlobalVariableGet(g_var_name_1276);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1568 = 0;
      GlobalVariableSet(g_var_name_1276, g_global_var_1568);
   }
   g_global_var_1572 = GlobalVariableGet(g_var_name_1284);
   if (GetLastError() != 0/* NO_ERROR */) {
      g_global_var_1572 = 0;
      GlobalVariableSet(g_var_name_1284, g_global_var_1572);
   }
   return (0);
}

int deinit() {
   ObjectsDeleteAll();
   Comment("");
   return (0);
}

int lsdjhja(int a_timeframe_0) {
   int li_ret_72 = 0;
   int li_76 = 1;
   double ld_56 = 0;
   double ld_64 = 0;
   for (int l_index_4 = 0; l_index_4 <= li_76 + 9; l_index_4++) ld_64 += MathAbs(High[l_index_4] - Low[l_index_4]);
   ld_56 = ld_64 / 10.0;
   double l_ima_8 = iMA(NULL, a_timeframe_0, g_period_1684, 0, MODE_EMA, PRICE_CLOSE, li_76 + 0);
   double l_ima_24 = iMA(NULL, a_timeframe_0, g_period_1684, 0, MODE_EMA, PRICE_CLOSE, li_76 + 1);
   double l_ima_40 = iMA(NULL, a_timeframe_0, g_period_1684, 0, MODE_EMA, PRICE_CLOSE, li_76 - 1);
   double l_ima_16 = iMA(NULL, a_timeframe_0, g_period_1688, 0, MODE_EMA, PRICE_CLOSE, li_76 + 0);
   double l_ima_32 = iMA(NULL, a_timeframe_0, g_period_1688, 0, MODE_EMA, PRICE_CLOSE, li_76 + 1);
   double l_ima_48 = iMA(NULL, a_timeframe_0, g_period_1688, 0, MODE_EMA, PRICE_CLOSE, li_76 - 1);
   if (l_ima_8 > l_ima_16 && l_ima_24 < l_ima_32 && l_ima_40 > l_ima_48) {
      li_ret_72 = 1;
      gd_unused_1676 = Time[0];
   } else {
      if (l_ima_8 < l_ima_16 && l_ima_24 > l_ima_32 && l_ima_40 < l_ima_48) {
         li_ret_72 = -1;
         gd_unused_1676 = Time[0];
      }
   }
   return (li_ret_72);
}

void owjksahsayhd() {
   int li_0;
   int li_4;
   int li_12;
   for (int l_pos_8 = OrdersTotal() - 1; l_pos_8 >= 0; l_pos_8--) {
      OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() == Symbol() && OrderCloseTime() == 0 && OrderComment() == "scf" || OrderComment() == "" || OrderTicket() == g_ticket_332) {
         if (EnableTrailingStops) {
            li_0 = zzxvy_s454(OrderTicket());
            if (gi_508) li_0 = 10 * li_0;
            if (OrderType() == OP_BUY) {
               if (li_0 >= TrailingStopStart) {
                  if (OrderStopLoss() == 0.0 || OrderStopLoss() < OrderOpenPrice()) nyusgfj(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() + TrailingStopPosSteps * Point, OrderTakeProfit());
                  else li_4 = (OrderClosePrice() - OrderStopLoss()) / Point - TrailingStopStart;
                  if (li_4 >= TrailingStopPriceSteps) nyusgfj(OrderTicket(), OrderOpenPrice(), OrderStopLoss() + MathCeil(li_4 / TrailingStopPriceSteps) * TrailingStopPosSteps * Point, OrderTakeProfit());
               }
            } else {
               if (OrderType() == OP_SELL) {
                  if (li_0 >= TrailingStopStart) {
                     if (OrderStopLoss() == 0.0 || OrderStopLoss() > OrderOpenPrice()) nyusgfj(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() - TrailingStopPosSteps * Point, OrderTakeProfit());
                     else li_4 = (OrderStopLoss() - OrderClosePrice()) / Point - TrailingStopStart;
                     if (li_4 >= TrailingStopPriceSteps) nyusgfj(OrderTicket(), OrderOpenPrice(), OrderStopLoss() - MathCeil(li_4 / TrailingStopPriceSteps) * TrailingStopPosSteps * Point, OrderTakeProfit());
                  }
               }
            }
         }
         if (EnableClosingManualTrades && owuejha(OrderTicket())) {
            li_12 = 10;
            if (gi_508) li_12 = 10 * li_12;
            if (li_0 > 0) {
               if (piwejansmj(g_ticket_332)) {
                  g_ticket_332 = -1;
                  gi_352 = FALSE;
               } else {
                  if (OrderType() == OP_BUY && OrderTakeProfit() != OrderOpenPrice() + li_12 * Point) nyusgfj(OrderTicket(), OrderOpenPrice(), OrderStopLoss(), OrderOpenPrice() + li_12 * Point);
                  else
                     if (OrderType() == OP_SELL && OrderTakeProfit() != OrderOpenPrice() - li_12 * Point) nyusgfj(OrderTicket(), OrderOpenPrice(), OrderStopLoss(), OrderOpenPrice() - li_12 * Point);
               }
            }
         }
      }
   }
}

int owuejha(int a_ticket_0) {
   int li_8;
   int li_12;
   bool li_ret_4 = FALSE;
   OrderSelect(a_ticket_0, SELECT_BY_TICKET);
   if (TimeCurrent() - OrderOpenTime() >= 300) {
      li_8 = zzxvy_s454(a_ticket_0);
      if (li_8 <= 10) li_12 = lsdjhja(PERIOD_M5);
      else li_12 = lsdjhja(PERIOD_M15);
      if (OrderType() == OP_BUY && li_12 == -1) li_ret_4 = TRUE;
      else
         if (OrderType() == OP_SELL && li_12 == 1) li_ret_4 = TRUE;
   }
   return (li_ret_4);
}

bool as5da987asd() {
   bool li_4;
   int l_bool_0 = OrderSelect(g_ticket_332, SELECT_BY_TICKET);
   if (l_bool_0 && OrderCloseTime() == 0) return (TRUE);
   if (g_ticket_332 != -1) {
      li_4 = FALSE;
      if ((OrderType() == OP_BUY && OrderClosePrice() >= OrderTakeProfit()) || (OrderType() == OP_SELL && OrderClosePrice() <= OrderTakeProfit())) Print("Order with Ticket Number " + g_ticket_332 + " reached Take Profit Price");
      else {
         if ((OrderType() == OP_BUY && OrderClosePrice() <= OrderStopLoss()) || (OrderType() == OP_SELL && OrderClosePrice() >= OrderStopLoss())) Print("Order with Ticket Number " + g_ticket_332 + " reached Stop Loss Price");
         else {
            if (OrderExpiration() == 0) Alert("Order with Ticket Number " + g_ticket_332 + " closed manually");
            else {
               if (TimeCurrent() >= OrderExpiration()) {
                  Print("Order with Ticket Number " + g_ticket_332 + " has expired");
                  li_4 = TRUE;
               } else Alert("Order with Ticket Number " + g_ticket_332 + " deleted manually");
            }
         }
      }
      if (SoundAlert) PlaySound(SoundFileAtClose);
      if (SendEmail) {
         if (!li_4) Send_Email(g_ticket_332, "CLOSE");
         else Send_Email(g_ticket_332, "EXPIRE");
      }
      g_ticket_332 = -1;
   }
   return (FALSE);
}

int start() {
   int lia_0[1];
   int lia_4[1];
   int lia_8[1];
   int lia_12[1];
   double lda_16[1];
   double lda_20[1];
   double lda_24[1];
   double lda_28[1];
   double lda_32[1];
   int lia_36[1];
   int lia_40[4];
   if (Year() > 2010 || (Year() == 2010 && Month() >= 6)) Alert("Your copy has expired! Please download a new one in the member\'s area.");
   if (!gi_476) return (-1);
   if (gi_108 == -100) {
      if (UseAutoGMTOffset) {
         if (!IsTesting()) {
            gi_108 = AutoGMTCalculation();
            Print("Retrieved GMT Offset: " + gi_108);
         } else {
            Alert("Warning", 
               "\n", "Automatic GMT offset calculation works only on live/demo trading", 
            "\n", "Manual GMT Offset will be used for backtesting");
            gi_108 = ManualGMTOffset;
         }
      } else gi_108 = ManualGMTOffset;
      gi_700 = gi_108 + 20;
      gi_704 = gi_108;
      gi_700 %= 24;
      fun006(gs_316, gi_108, lia_0, lia_4, lia_8, lia_12, lda_16, lda_20, lda_24, lda_28, lda_32, lia_36, Digits);
      gi_784 = lia_0[0];
      gi_788 = lia_4[0];
      gi_776 = lia_8[0];
      gi_780 = lia_12[0];
      gd_792 = lda_16[0];
      gd_800 = lda_20[0];
      gd_808 = lda_24[0];
      gd_816 = lda_28[0];
      gd_824 = lda_32[0];
      gi_864 = lia_36[0];
      gi_1036 = fun027(gs_316, gi_108);
   }
   if (!IsTesting()) jsahdjas();
   owjksahsayhd();
   if (EnableTrading != TRUE) return (0);
   if (SendTradingStatistics) SendTradingStatistics();
   g_spread_324 = MarketInfo(Symbol(), MODE_SPREAD);
   if (EURCHF_Grid_Strategy && GBPUSD_Hedging_Strategy) {
      Alert("Error: Cannot use both GBPUSD_Hedging_Strategy and EURCHF_Grid_Strategy strategies together.");
      return (0);
   }
   if (EURCHF_Grid_Strategy) {
      if (gs_316 == "EURCHF") {
         if (!NFA_Compliant) {
            KJSDHF_4S865A_AS85();
            QUYT_A9IA_545A();
         } else Alert("This Strategy cannot be used because of the NFA FIFO rule!");
      } else {
         Alert("Error: Wrong Currency Pair.");
         Alert("Swing Strategy can be used on EURCHF pair only.");
      }
   } else {
      if (GBPUSD_Hedging_Strategy) {
         if (gs_316 == "GBPUSD") {
            if (!NFA_Compliant) jr654ej();
            else Alert("Hedging is prohibited by NFA Regulated Brokers!");
         } else {
            Alert("Error: Wrong Currency Pair.");
            Alert("Hedging & Pyramiding Strategy can be used on GBPUSD pair only.");
         }
      } else {
         if (Period() != PERIOD_M15) {
            Alert("Please attach the EA to the M15 Timeframe for the scalping strategy");
            return (0);
         }
         fun046(gs_316, lia_40);
         if (lia_40[0] == 1) SCF_EA_STS();
         if (lia_40[1] == 1) KASD_PEWOSL_18AW();
         if (lia_40[2] == 1) LNMSBHJ_SD54878_58787();
         if (lia_40[3] == 1) QUYT_A9IA_545A();
      }
   }
   return (0);
}

int AutoGMTCalculation() {
   return (StrToInteger(getGMTOffset(gs_1692 + Hour())));
}

string getGMTOffset(string as_0) {
   string ls_ret_8 = "XX";
   gi_1708 = InternetOpenA(gs_1700, 0, "0", "0", 0);
   if (!GetData(as_0, ls_ret_8)) {
      Alert("Error getting GMT offset from server. Using manual GMT offset = " + ManualGMTOffset);
      ls_ret_8 = ManualGMTOffset;
   }
   InternetCloseHandle(gi_1708);
   return (ls_ret_8);
}

bool GetData(string as_0, string &as_8) {
   int li_16 = InternetOpenUrlA(gi_1708, as_0, "0", 0, 0, 0);
   if (li_16 == 0) return (FALSE);
   int lia_20[] = {1};
   string ls_24 = "xx";
   InternetReadFile(li_16, ls_24, 10, lia_20);
   if (li_16 != 0) InternetCloseHandle(li_16);
   as_8 = ls_24;
   return (TRUE);
}

int egudss2a5a5d11(string a_symbol_0) {
   bool li_ret_8 = FALSE;
   for (int l_pos_12 = 0; l_pos_12 < OrdersTotal(); l_pos_12++) {
      OrderSelect(l_pos_12, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() == a_symbol_0) {
         li_ret_8 = TRUE;
         break;
      }
   }
   return (li_ret_8);
}

double uiasgy_sdf(int a_timeframe_0, int ai_4, int ai_8) {
   double ld_ret_12 = 0;
   double ld_20 = 0;
   for (int l_count_28 = 0; l_count_28 < ai_4; l_count_28++) ld_20 += iClose(Symbol(), a_timeframe_0, l_count_28 + ai_8);
   ld_ret_12 = ld_20 / ai_4;
   return (ld_ret_12);
}

void ppsfjia485() {
   int li_0 = zzxvy_s454(g_ticket_332);
   int li_4 = 3;
   if (gi_508) li_4 = 10 * li_4;
   if (li_0 >= gi_348) {
      if (OrderType() == OP_BUY && OrderStopLoss() < OrderOpenPrice()) nyusgfj(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() + li_4 * Point, OrderTakeProfit());
      else
         if (OrderType() == OP_SELL && OrderStopLoss() > OrderOpenPrice()) nyusgfj(OrderTicket(), OrderOpenPrice(), OrderOpenPrice() - li_4 * Point, OrderTakeProfit());
   }
   if (li_0 >= gi_340) gi_352 = TRUE;
}

void ltp_j4857(double ad_0) {
   if (zzxvy_s454(g_ticket_332) <= ad_0) {
      OrderSelect(g_ticket_332, SELECT_BY_TICKET);
      if (piwejansmj(g_ticket_332)) {
         g_ticket_332 = -1;
         gi_352 = FALSE;
      }
   }
}

void KASD_PEWOSL_18AW() {
   double l_irsi_0;
   double l_irsi_8;
   double l_ima_16;
   int li_40;
   if (gi_632 <= 0 && gi_636 <= 0) return;
   for (int l_pos_32 = OrdersTotal() - 1; l_pos_32 >= 0; l_pos_32--) {
      if (OrderSelect(l_pos_32, SELECT_BY_POS, MODE_TRADES) && OrderMagicNumber() == g_magic_608 && OrderType() == OP_BUY || OrderType() == OP_SELL && OrderSymbol() == g_symbol_624)
         if (fun004(OrderClosePrice(), gi_612, OrderOpenPrice(), OrderType(), gd_708, gd_716)) piwejansmj(OrderTicket());
   }
   for (int l_pos_36 = OrdersTotal() - 1; l_pos_36 >= 0; l_pos_36--) {
      if (OrderSelect(l_pos_36, SELECT_BY_POS, MODE_TRADES) && OrderMagicNumber() == g_magic_608 && OrderType() == OP_BUY || OrderType() == OP_SELL && OrderSymbol() == g_symbol_624)
         if (fun002(TimeCurrent(), OrderOpenTime(), OrderClosePrice(), gi_612, OrderOpenPrice(), OrderType(), gi_684, gd_724, gi_688, gd_732, gi_692, gd_740, gi_696, gd_748, gd_756) != 0) piwejansmj(OrderTicket());
   }
   if (Ask - Bid <= gd_764) {
      if (DayOfWeek() != 0) {
         if (DayOfWeek() != 5) {
            if (DayOfWeek() == 1 && Hour() < gi_700) return;
            if (fun003(TimeHour(TimeCurrent()), gi_700, gi_704, Hour(), Minute()) && ujasgd()) {
               HideTestIndicators(TRUE);
               l_irsi_0 = iRSI(NULL, 0, 6, PRICE_CLOSE, 0);
               l_irsi_8 = iRSI(NULL, PERIOD_M1, 20, PRICE_CLOSE, 0);
               l_ima_16 = iMA(NULL, 0, 8, 0, MODE_SMA, PRICE_MEDIAN, 1);
               HideTestIndicators(FALSE);
               li_40 = x58a8s();
               if (li_40 == -1 && NFA_Compliant && egudss2a5a5d11(Symbol())) li_40 = 1;
               if (li_40 == -1) {
                  if (fun020(Ask, l_irsi_0, l_irsi_8, l_ima_16, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
                     if (g_spread_324 <= MaxSpread) ueyr_jdshr54(OP_BUY);
                  } else {
                     if (fun021(Bid, l_irsi_0, l_irsi_8, l_ima_16, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472))
                        if (g_spread_324 <= MaxSpread) ueyr_jdshr54(OP_SELL);
                  }
               }
            }
         }
      }
   }
}

int ujasgd() {
   bool li_ret_0 = FALSE;
   double ld_4 = g_spread_324;
   if (gi_508) ld_4 /= 10.0;
   if (gs_316 == "EURCHF" && ld_4 <= 5.0) li_ret_0 = TRUE;
   else {
      if (gs_316 == "EURGBP" && ld_4 <= 3.5) li_ret_0 = TRUE;
      else {
         if (gs_316 == "USDCAD" && ld_4 <= 3.5) li_ret_0 = TRUE;
         else {
            if (gs_316 == "GBPCHF" && ld_4 <= 6.6) li_ret_0 = TRUE;
            else {
               if (gs_316 == "EURUSD" && ld_4 <= 3.0) li_ret_0 = TRUE;
               else {
                  if (gs_316 == "GBPUSD" && ld_4 <= 4.0) li_ret_0 = TRUE;
                  else {
                     if (gs_316 == "USDCHF" && ld_4 <= 4.0) li_ret_0 = TRUE;
                     else
                        if (gs_316 == "USDJPY" && ld_4 <= 4.0) li_ret_0 = TRUE;
                  }
               }
            }
         }
      }
   }
   return (li_ret_0);
}

int x58a8s() {
   for (int l_pos_0 = 0; l_pos_0 < OrdersTotal(); l_pos_0++) {
      if (OrderSelect(l_pos_0, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderMagicNumber() == g_magic_608 && OrderSymbol() == g_symbol_624)
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) return (OrderTicket());
      }
   }
   return (-1);
}

int ueyr_jdshr54(int a_cmd_0) {
   double ld_4;
   double ld_12;
   double l_price_20;
   color l_color_28;
   string ls_unused_32;
   g_lots_564 = fun001(gd_1636, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
   if (g_spread_324 > MaxSpread) return (-1);
   if (AccountFreeMargin() < AccountBalance() * MarginCutOffPercent / 100.0) return (-1);
   RefreshRates();
   if (a_cmd_0 == OP_BUY) {
      l_price_20 = Ask;
      l_color_28 = g_color_288;
   } else {
      l_price_20 = Bid;
      l_color_28 = g_color_292;
   }
   int li_40 = 1;
   if (gi_508) li_40 = 10;
   if (a_cmd_0 == OP_BUY) {
      ld_4 = Ask + li_40 * (gi_632 + 10) * Point;
      ld_12 = Ask - li_40 * (gi_636 + 10) * Point;
   } else {
      ld_4 = Bid - li_40 * (gi_632 + 10) * Point;
      ld_12 = Bid + li_40 * (gi_636 + 10) * Point;
   }
   int l_ticket_44 = OrderSend(g_symbol_624, a_cmd_0, g_lots_564, l_price_20, Slippage, 0, 0, ExpertComment, g_magic_608, 0, l_color_28);
   if (l_ticket_44 > 0 && OrderSelect(l_ticket_44, SELECT_BY_TICKET)) {
      nyusgfj(OrderTicket(), OrderOpenPrice(), ld_12, ld_4);
      if (SoundAlert) {
         if (a_cmd_0 == OP_BUY) PlaySound(SoundFileAtBuy);
         else PlaySound(SoundFileAtSell);
      }
      if (SendEmail) Send_Email(l_ticket_44, "OPEN");
   } else Print("OrderSend Error > " + fun045(GetLastError()));
   return (l_ticket_44);
}

void asdf_isaudh() {
   HideTestIndicators(TRUE);
   gd_unused_936 = 6;
   gd_944 = 0;
   for (int li_0 = 1; li_0 < Bars; li_0++) {
      if (iFractals(NULL, PERIOD_M15, MODE_LOWER, li_0) != 0.0) {
         g_ifractals_1008 = iFractals(NULL, PERIOD_M15, MODE_LOWER, li_0);
         break;
      }
   }
   for (int li_4 = 1; li_4 < Bars; li_4++) {
      if (iFractals(NULL, PERIOD_M15, MODE_UPPER, li_4) != 0.0) {
         g_ifractals_1000 = iFractals(NULL, PERIOD_M15, MODE_UPPER, li_4);
         break;
      }
   }
   for (int li_8 = 1; li_8 < Bars; li_8++) {
      if (iFractals(NULL, PERIOD_H1, MODE_LOWER, li_8) != 0.0) {
         g_ifractals_1024 = iFractals(NULL, PERIOD_H1, MODE_LOWER, li_8);
         break;
      }
   }
   for (int li_12 = 1; li_12 < Bars; li_12++) {
      if (iFractals(NULL, PERIOD_H1, MODE_UPPER, li_12) != 0.0) {
         g_ifractals_1016 = iFractals(NULL, PERIOD_H1, MODE_UPPER, li_12);
         return;
      }
   }
}

int h5sa4dhjsag_n(int a_magic_0) {
   bool li_ret_4 = FALSE;
   for (int l_pos_8 = 0; l_pos_8 < OrdersTotal(); l_pos_8++) {
      if (OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == a_magic_0) {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
               li_ret_4 = TRUE;
               break;
            }
         }
      }
   }
   return (li_ret_4);
}

int ystqlahf(int a_cmd_0, double a_lots_4, double a_price_12, double ad_20, double ad_28, int a_magic_36, color a_color_40) {
   if (g_spread_324 > MaxSpread) return (-1);
   if (AccountFreeMargin() < AccountBalance() * MarginCutOffPercent / 100.0) return (-1);
   int l_ticket_44 = OrderSend(Symbol(), a_cmd_0, a_lots_4, a_price_12, Slippage, 0, 0, ExpertComment, a_magic_36, 0, a_color_40);
   if (l_ticket_44 > 0 && OrderSelect(l_ticket_44, SELECT_BY_TICKET)) {
      nyusgfj(OrderTicket(), OrderOpenPrice(), ad_28, ad_20);
      if (SoundAlert) {
         if (a_cmd_0 == OP_BUY) PlaySound(SoundFileAtBuy);
         else PlaySound(SoundFileAtSell);
      }
      if (SendEmail) Send_Email(l_ticket_44, "OPEN");
   } else Print("OrderSend Error: " + fun045(GetLastError()));
   return (l_ticket_44);
}

int sjdhfjdhfjdhf(int a_magic_0, int a_cmd_4) {
   for (int l_pos_8 = OrdersTotal() - 1; l_pos_8 >= 0; l_pos_8--) {
      if (OrderSelect(l_pos_8, SELECT_BY_POS)) {
         if (OrderMagicNumber() == a_magic_0 && OrderSymbol() == Symbol())
            if (OrderType() == a_cmd_4) return (OrderTicket());
      }
   }
   return (-1);
}

int x45sd_jsakh(int &aia_0[]) {
   int l_index_4 = 0;
   for (int l_pos_8 = OrdersTotal() - 1; l_pos_8 >= 0; l_pos_8--) {
      if (OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES) && OrderSymbol() == Symbol()) {
         if (l_index_4 >= 499) break;
         if (OrderCloseTime() == 0) {
            l_index_4++;
            aia_0[l_index_4] = OrderMagicNumber();
         }
      }
   }
   return (l_index_4);
}

int s5sa4d8s(int ai_0) {
   if (ai_0 != 0 && ai_0 != 1) return (-1);
   if (g_spread_324 > MaxSpread) return (-1);
   if (AccountFreeMargin() < AccountBalance() * MarginCutOffPercent / 100.0) return (-1);
   int l_ticket_4 = -1;
   if (MoneyManagement) g_lots_564 = fun001(gd_1660, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
   else g_lots_564 = LotSize;
   if (ai_0 == 0) l_ticket_4 = OrderSend(Symbol(), OP_BUY, g_lots_564, Ask, Slippage, 0, 0, ExpertComment, gia_1160[gi_1168], 0, g_color_288);
   else l_ticket_4 = OrderSend(Symbol(), OP_SELL, g_lots_564, Bid, Slippage, 0, 0, ExpertComment, gia_1160[gi_1168], 0, g_color_292);
   if (l_ticket_4 > 0 && OrderSelect(l_ticket_4, SELECT_BY_TICKET)) {
      if (ai_0 == 0) {
         nyusgfj(OrderTicket(), OrderOpenPrice(), 0, Ask + gi_1140 * Point);
         if (SoundAlert) PlaySound(SoundFileAtBuy);
      } else {
         nyusgfj(OrderTicket(), OrderOpenPrice(), 0, Bid - gi_1140 * Point);
         if (SoundAlert) PlaySound(SoundFileAtSell);
      }
      if (SendEmail) Send_Email(l_ticket_4, "OPEN");
   } else Print("Error Opening Order: ", fun045(GetLastError()));
   return (0);
}

double asf47sws(int a_magic_0) {
   int l_cmd_4;
   double ld_ret_8 = 0;
   int l_ord_total_16 = OrdersTotal();
   if (l_ord_total_16 > 0) {
      for (int l_pos_20 = l_ord_total_16 - 1; l_pos_20 >= 0; l_pos_20--) {
         OrderSelect(l_pos_20, SELECT_BY_POS, MODE_TRADES);
         l_cmd_4 = OrderType();
         if (OrderMagicNumber() == a_magic_0)
            if (l_cmd_4 == OP_BUY || l_cmd_4 == OP_SELL) ld_ret_8 += OrderProfit() + OrderSwap() + OrderCommission();
      }
      return (ld_ret_8);
   }
   return (0);
}

double fsd897(int a_magic_0, int ai_4) {
   double ld_ret_8 = 0;
   int l_hist_total_16 = OrdersHistoryTotal();
   if (l_hist_total_16 > 0 && ai_4 > 0) {
      for (int l_pos_20 = l_hist_total_16 - 1; l_pos_20 >= 0; l_pos_20--) {
         OrderSelect(l_pos_20, SELECT_BY_POS, MODE_HISTORY);
         if (OrderMagicNumber() == a_magic_0)
            if (OrderOpenTime() >= ai_4) ld_ret_8 += OrderProfit() + OrderSwap() + OrderCommission();
      }
      return (ld_ret_8);
   }
   return (0);
}

double pasodajy(int a_magic_0) {
   int l_cmd_4;
   bool l_ord_close_8;
   int l_ord_total_12 = OrdersTotal();
   gd_1588 = 0;
   gd_1596 = 0;
   g_count_1604 = 0;
   for (int l_pos_16 = l_ord_total_12 - 1; l_pos_16 >= 0; l_pos_16--) {
      OrderSelect(l_pos_16, SELECT_BY_POS, MODE_TRADES);
      l_cmd_4 = OrderType();
      l_ord_close_8 = FALSE;
      switch (l_cmd_4) {
      case OP_BUY:
         if (OrderMagicNumber() == a_magic_0) l_ord_close_8 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), Slippage, g_color_296);
         break;
      case OP_SELL:
         if (OrderMagicNumber() == a_magic_0) l_ord_close_8 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), Slippage, g_color_296);
      }
      if (l_ord_close_8) {
         g_count_1604++;
         if (OrderProfit() > 0.0) gd_1588 += OrderProfit();
         else gd_1596 += OrderProfit();
      }
   }
   if (SendEmail && gd_1588 != 0.0 || gd_1588 != 0.0) jr654ej_Send_Email(g_count_1604, gd_1588, gd_1596);
   return (0.0);
}

int aiyui6(int a_magic_0) {
   int l_cmd_4;
   int l_ord_total_8 = OrdersTotal();
   int l_count_12 = 0;
   l_ord_total_8 = OrdersTotal();
   if (l_ord_total_8 > 0) {
      for (int l_pos_16 = l_ord_total_8 - 1; l_pos_16 >= 0; l_pos_16--) {
         OrderSelect(l_pos_16, SELECT_BY_POS, MODE_TRADES);
         l_cmd_4 = OrderType();
         if (l_cmd_4 == OP_BUY || l_cmd_4 == OP_SELL && OrderMagicNumber() == a_magic_0) l_count_12++;
      }
   }
   return (l_count_12);
}

int utg874gbd5(int a_magic_0, int ai_4) {
   int l_cmd_8;
   double ld_24;
   int l_ord_total_12 = OrdersTotal();
   bool li_ret_16 = TRUE;
   l_ord_total_12 = OrdersTotal();
   g_ord_open_price_1712 = 0;
   g_ord_open_price_1728 = 0;
   g_ord_open_price_1720 = 0;
   g_ord_open_price_1736 = 0;
   g_count_1744 = 0;
   g_count_1748 = 0;
   if (l_ord_total_12 > 0) {
      for (int l_pos_20 = l_ord_total_12 - 1; l_pos_20 >= 0; l_pos_20--) {
         if (OrderMagicNumber() == a_magic_0) {
            if (OrderType() == OP_SELL) {
               g_count_1744++;
               if (g_ord_open_price_1712 == 0.0) g_ord_open_price_1712 = OrderOpenPrice();
               else
                  if (OrderOpenPrice() < g_ord_open_price_1712) g_ord_open_price_1712 = OrderOpenPrice();
               if (g_ord_open_price_1728 == 0.0) g_ord_open_price_1728 = OrderOpenPrice();
               else
                  if (OrderOpenPrice() > g_ord_open_price_1728) g_ord_open_price_1728 = OrderOpenPrice();
            } else {
               if (OrderType() == OP_BUY) {
                  g_count_1748++;
                  if (g_ord_open_price_1720 == 0.0) g_ord_open_price_1720 = OrderOpenPrice();
                  else
                     if (OrderOpenPrice() < g_ord_open_price_1720) g_ord_open_price_1720 = OrderOpenPrice();
                  if (g_ord_open_price_1736 == 0.0) g_ord_open_price_1736 = OrderOpenPrice();
                  else
                     if (OrderOpenPrice() > g_ord_open_price_1736) g_ord_open_price_1736 = OrderOpenPrice();
               }
            }
         }
         OrderSelect(l_pos_20, SELECT_BY_POS, MODE_TRADES);
         l_cmd_8 = OrderType();
         switch (l_cmd_8) {
         case OP_BUY:
            ld_24 = MathAbs(OrderOpenPrice() - Ask) / Point;
            if (gi_508) ld_24 /= 10.0;
            if (ai_4 == 0 && OrderMagicNumber() == a_magic_0 && ld_24 < 3.0) li_ret_16 = FALSE;
         case OP_SELL:
            ld_24 = MathAbs(OrderOpenPrice() - Bid) / Point;
            if (gi_508) ld_24 /= 10.0;
            if (ai_4 == 1 && OrderMagicNumber() == a_magic_0 && ld_24 < 3.0) li_ret_16 = FALSE;
         }
         if (!(li_ret_16)) break;
      }
   }
   return (li_ret_16);
}

int kdsjoa8547(int a_magic_0) {
   double ld_4;
   string l_comment_12;
   string l_comment_20;
   int l_ticket_28;
   int li_ret_32;
   double l_lots_36;
   g_global_var_1420 = GlobalVariableGet(g_var_name_1212);
   if (a_magic_0 == g_magic_1204) {
      ld_4 = g_global_var_1372;
      l_comment_12 = gs_1300 + " (" + DoubleToStr(GlobalVariableGet(g_var_name_1324) + 1.0, 0) + "/" + DoubleToStr(g_global_var_1420, 2) + "/" + AccountNumber() + ")";
      l_comment_20 = gs_1308 + " (" + DoubleToStr(GlobalVariableGet(g_var_name_1324) + 1.0, 0) + "/" + DoubleToStr(g_global_var_1420, 2) + "/" + AccountNumber() + ")";
   } else {
      if (a_magic_0 == g_magic_1208) {
         ld_4 = g_global_var_1380;
         l_comment_12 = gs_1340 + " (" + DoubleToStr(GlobalVariableGet(g_var_name_1364) + 1.0, 0) + "/" + DoubleToStr(g_global_var_1420, 2) + "/" + AccountNumber() + ")";
         l_comment_20 = gs_1348 + " (" + DoubleToStr(GlobalVariableGet(g_var_name_1364) + 1.0, 0) + "/" + DoubleToStr(g_global_var_1420, 2) + "/" + AccountNumber() + ")";
      }
   }
   if (a_magic_0 == g_magic_1204) {
      if (gi_1608) {
         if (g_count_1748 > g_count_1744) g_ord_open_price_1736 = 0;
         else
            if (g_count_1744 > g_count_1748) g_ord_open_price_1712 = 0;
      } else {
         g_ord_open_price_1712 = 0;
         g_ord_open_price_1736 = 0;
      }
   } else {
      if (a_magic_0 == g_magic_1208) {
         if (gi_1612) {
            if (g_count_1748 > g_count_1744) g_ord_open_price_1736 = 0;
            else
               if (g_count_1744 > g_count_1748) g_ord_open_price_1712 = 0;
         } else {
            g_ord_open_price_1712 = 0;
            g_ord_open_price_1736 = 0;
         }
      }
   }
   if (g_spread_324 <= MaxSpread && utg874gbd5(a_magic_0, 1) && Bid < ld_4 && MathMod(Bid / gd_1576, 3) == 0.0 && g_ord_open_price_1712 == 0.0 || Bid < g_ord_open_price_1712) {
      l_lots_36 = LotSize;
      if (MoneyManagement) l_lots_36 = fun001(gd_1668, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
      l_ticket_28 = OrderSend(Symbol(), OP_SELL, l_lots_36, Bid, Slippage, 0, 0, l_comment_20, a_magic_0, 0, g_color_292);
      if (l_ticket_28 <= 0) Print("OrderSend Error: " + fun045(GetLastError()));
      else
         if (SoundAlert) PlaySound(SoundFileAtSell);
      return (li_ret_32);
   }
   if (g_spread_324 <= MaxSpread && utg874gbd5(a_magic_0, 0) && Ask > ld_4 && MathMod(Ask / gd_1576, 3) == 0.0 && g_ord_open_price_1736 == 0.0 || Ask > g_ord_open_price_1736) {
      l_lots_36 = LotSize;
      if (MoneyManagement) l_lots_36 = fun001(gd_1668, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
      l_ticket_28 = OrderSend(Symbol(), OP_BUY, l_lots_36, Ask, Slippage, 0, 0, l_comment_12, a_magic_0, 0, g_color_288);
      if (l_ticket_28 <= 0) Print("OrderSend Error: " + fun045(GetLastError()));
      else
         if (SoundAlert) PlaySound(SoundFileAtBuy);
      return (li_ret_32);
   }
   return (0);
}

void u58dsax_djsah(int a_magic_0) {
   string ls_4;
   string ls_12;
   double ld_20;
   int l_ord_total_28;
   int l_cmd_32;
   int l_ord_close_36;
   int lia_44[4];
   int lia_48[2];
   double l_iclose_56;
   if (a_magic_0 == g_magic_1204) {
      ld_20 = g_global_var_1372;
      ls_4 = gs_1300 + "BRT";
      ls_12 = gs_1308 + "BRT";
   } else {
      if (a_magic_0 == g_magic_1208) {
         ld_20 = g_global_var_1380;
         ls_4 = gs_1340 + "BRT";
         ls_12 = gs_1348 + "BRT";
      }
   }
   lia_44[0] = g_global_var_1560;
   lia_44[1] = g_global_var_1564;
   lia_44[2] = g_global_var_1568;
   lia_44[3] = g_global_var_1572;
   fun039(g_ima_1544, g_ima_1552, iHigh(NULL, PERIOD_D1, 1), gd_1536, gd_1528, iLow(NULL, PERIOD_D1, 1), lia_44, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472);
   g_global_var_1560 = lia_44[0];
   g_global_var_1564 = lia_44[1];
   g_global_var_1568 = lia_44[2];
   g_global_var_1572 = lia_44[3];
   GlobalVariableSet(g_var_name_1260, g_global_var_1560);
   GlobalVariableSet(g_var_name_1268, g_global_var_1564);
   GlobalVariableSet(g_var_name_1276, g_global_var_1568);
   GlobalVariableSet(g_var_name_1284, g_global_var_1572);
   lia_48[0] = g_global_var_1568;
   lia_48[1] = g_global_var_1572;
   fun040(g_global_var_1560, g_global_var_1564, iClose(NULL, PERIOD_D1, 1), g_ima_1520, iRSI(NULL, PERIOD_D1, 12, PRICE_CLOSE, 0), lia_48, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472);
   g_global_var_1568 = lia_48[0];
   g_global_var_1572 = lia_48[1];
   GlobalVariableSet(g_var_name_1276, g_global_var_1568);
   GlobalVariableSet(g_var_name_1284, g_global_var_1572);
   if (g_global_var_1568 && iClose(NULL, 0, 0) > gd_1536) {
      l_ord_total_28 = OrdersTotal();
      gd_1588 = 0;
      gd_1596 = 0;
      g_count_1604 = 0;
      for (int l_pos_52 = l_ord_total_28 - 1; l_pos_52 >= 0; l_pos_52--) {
         OrderSelect(l_pos_52, SELECT_BY_POS);
         l_cmd_32 = OrderType();
         if (l_cmd_32 == OP_BUY && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > 0.0 && OrderComment() == ls_4) l_ord_close_36 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), Slippage, g_color_296);
         if (l_ord_close_36 == 1) {
            g_count_1604++;
            if (OrderProfit() > 0.0) gd_1588 += OrderProfit();
            else gd_1596 += OrderProfit();
         }
      }
      if (SendEmail && gd_1588 != 0.0 || gd_1588 != 0.0) jr654ej_Send_Email(g_count_1604, gd_1588, gd_1596);
   } else {
      if (g_global_var_1572 && iClose(NULL, 0, 0) < gd_1528) {
         l_ord_total_28 = OrdersTotal();
         gd_1588 = 0;
         gd_1596 = 0;
         g_count_1604 = 0;
         for (l_pos_52 = l_ord_total_28 - 1; l_pos_52 >= 0; l_pos_52--) {
            OrderSelect(l_pos_52, SELECT_BY_POS);
            l_cmd_32 = OrderType();
            if (l_cmd_32 == OP_SELL && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > 0.0 && OrderComment() == ls_12) l_ord_close_36 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), Slippage, g_color_296);
            if (l_ord_close_36 == 1) {
               g_count_1604++;
               if (OrderProfit() > 0.0) gd_1588 += OrderProfit();
               else gd_1596 += OrderProfit();
            }
         }
         if (SendEmail && gd_1588 != 0.0 || gd_1588 != 0.0) jr654ej_Send_Email(g_count_1604, gd_1588, gd_1596);
      }
   }
   if (aiyui6(a_magic_0) > 40) {
      l_iclose_56 = iClose(NULL, 0, 0);
      if (fun041(g_global_var_1572, l_iclose_56, g_ima_1520, g_ima_1544, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
         if (l_iclose_56 > ld_20) ld_20 = l_iclose_56;
         l_ord_total_28 = OrdersTotal();
         gd_1588 = 0;
         gd_1596 = 0;
         g_count_1604 = 0;
         for (l_pos_52 = l_ord_total_28 - 1; l_pos_52 >= 0; l_pos_52--) {
            OrderSelect(l_pos_52, SELECT_BY_POS);
            l_cmd_32 = OrderType();
            if (l_cmd_32 == OP_BUY && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > gd_1196) l_ord_close_36 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), Slippage, g_color_296);
            if (l_ord_close_36 == 1) {
               g_count_1604++;
               if (OrderProfit() > 0.0) gd_1588 += OrderProfit();
               else gd_1596 += OrderProfit();
            }
         }
         if (SendEmail && gd_1588 != 0.0 || gd_1588 != 0.0) jr654ej_Send_Email(g_count_1604, gd_1588, gd_1596);
      } else {
         if (fun042(g_global_var_1568, l_iclose_56, g_ima_1520, g_ima_1544, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
            if (l_iclose_56 < ld_20) ld_20 = l_iclose_56;
            l_ord_total_28 = OrdersTotal();
            gd_1588 = 0;
            gd_1596 = 0;
            g_count_1604 = 0;
            for (l_pos_52 = l_ord_total_28 - 1; l_pos_52 >= 0; l_pos_52--) {
               OrderSelect(l_pos_52, SELECT_BY_POS);
               l_cmd_32 = OrderType();
               if (l_cmd_32 == OP_SELL && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > gd_1196) l_ord_close_36 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), Slippage, g_color_296);
               if (l_ord_close_36 == 1) {
                  g_count_1604++;
                  if (OrderProfit() > 0.0) gd_1588 += OrderProfit();
                  else gd_1596 += OrderProfit();
               }
            }
            if (SendEmail && gd_1588 != 0.0 || gd_1588 != 0.0) jr654ej_Send_Email(g_count_1604, gd_1588, gd_1596);
         }
      }
   }
}

int d8s2fpsj5(int a_magic_0) {
   string ls_4;
   string ls_12;
   int l_ord_total_20;
   int l_cmd_24;
   int l_ord_close_28;
   if (a_magic_0 == g_magic_1204) {
      ls_4 = gs_1300 + "REAR";
      ls_12 = gs_1308 + "REAR";
   } else {
      if (a_magic_0 == g_magic_1208) {
         ls_4 = gs_1340 + "REAR";
         ls_12 = gs_1348 + "REAR";
      }
   }
   double l_iclose_36 = iClose(NULL, 0, 0);
   if (fun043(l_iclose_36, gd_1536, g_ima_1520, gd_1576, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
      l_ord_total_20 = OrdersTotal();
      gd_1588 = 0;
      gd_1596 = 0;
      g_count_1604 = 0;
      for (int l_pos_44 = l_ord_total_20 - 1; l_pos_44 >= 0; l_pos_44--) {
         OrderSelect(l_pos_44, SELECT_BY_POS);
         l_cmd_24 = OrderType();
         if (l_cmd_24 == OP_BUY && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > 0.0 && OrderComment() == ls_4) l_ord_close_28 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), Slippage, g_color_296);
         if (l_ord_close_28 == 1) {
            g_count_1604++;
            if (OrderProfit() > 0.0) gd_1588 += OrderProfit();
            else gd_1596 += OrderProfit();
         }
      }
      if (SendEmail && gd_1588 != 0.0 || gd_1588 != 0.0) jr654ej_Send_Email(g_count_1604, gd_1588, gd_1596);
   } else {
      if (l_iclose_36 <= gd_1528 || (g_ima_1520 - l_iclose_36) / gd_1576 >= 0.0) {
         l_ord_total_20 = OrdersTotal();
         gd_1588 = 0;
         gd_1596 = 0;
         g_count_1604 = 0;
         for (l_pos_44 = l_ord_total_20 - 1; l_pos_44 >= 0; l_pos_44--) {
            OrderSelect(l_pos_44, SELECT_BY_POS);
            l_cmd_24 = OrderType();
            if (l_cmd_24 == OP_SELL && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > 0.0 && OrderComment() == ls_12) l_ord_close_28 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), Slippage, g_color_296);
            if (l_ord_close_28 == 1) {
               g_count_1604++;
               if (OrderProfit() > 0.0) gd_1588 += OrderProfit();
               else gd_1596 += OrderProfit();
            }
         }
         if (SendEmail && gd_1588 != 0.0 || gd_1588 != 0.0) jr654ej_Send_Email(g_count_1604, gd_1588, gd_1596);
      }
   }
   return (0);
}

void s9f7a92(int a_magic_0) {
   double ld_8;
   int l_ord_total_4 = OrdersTotal();
   gi_1584 = 0;
   gd_1588 = 0;
   gd_1596 = 0;
   g_count_1604 = 0;
   bool li_16 = FALSE;
   int li_20 = 100;
   if (a_magic_0 == g_magic_1204) li_20 = gi_1620;
   else
      if (a_magic_0 == g_magic_1208) li_20 = gi_1624;
   for (int l_pos_24 = l_ord_total_4 - 1; l_pos_24 >= 0; l_pos_24--) {
      if (OrderSelect(l_pos_24, SELECT_BY_POS) && OrderMagicNumber() == a_magic_0) {
         if (gi_1616 && zzxvy_s454(OrderTicket()) >= li_20) {
            li_16 = TRUE;
            OrderClose(OrderTicket(), OrderLots(), OrderClosePrice(), Slippage, g_color_296);
            if (a_magic_0 == g_magic_1204) gi_1608 = TRUE;
            else
               if (a_magic_0 == g_magic_1208) gi_1612 = TRUE;
         } else {
            gi_1584 += zzxvy_s454(OrderTicket());
            g_count_1604++;
            ld_8 = OrderProfit() + OrderSwap() + OrderCommission();
            if (ld_8 > 0.0) gd_1588 += ld_8;
            else gd_1596 += ld_8;
         }
      }
   }
   if (li_16) {
      if (a_magic_0 == g_magic_1204) gi_1620 += 10;
      else
         if (a_magic_0 == g_magic_1208) gi_1624 += 10;
   }
   if (gi_1584 >= 100 && gd_1588 - gd_1596 >= 10.0) osdufoidsu(a_magic_0, -1);
}

void osdufoidsu(int a_magic_0, int a_magic_4) {
   int l_error_20;
   int l_count_8 = 0;
   bool l_ord_close_12 = FALSE;
   for (int l_pos_16 = OrdersTotal() - 1; l_pos_16 >= 0; l_pos_16--) {
      OrderSelect(l_pos_16, SELECT_BY_POS, MODE_TRADES);
      if (OrderMagicNumber() != a_magic_0 && OrderMagicNumber() != a_magic_4) continue;
      l_count_8 = 0;
      while (l_count_8 < 10) {
         RefreshRates();
         l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), OrderClosePrice(), Slippage, g_color_296);
         if (l_ord_close_12) l_count_8 = 10;
         else {
            l_error_20 = GetLastError();
            Print("Order Ticket: " + OrderTicket());
            Print(l_count_8, " Error closing order : (", fun045(l_error_20), ") ");
            if (l_error_20 > 0/* NO_ERROR */) l_count_8++;
         }
      }
   }
   if (a_magic_0 == g_magic_1204) {
      gi_1620 = 200;
      gi_1608 = FALSE;
   } else {
      if (a_magic_0 == g_magic_1208) {
         gi_1624 = 160;
         gi_1612 = FALSE;
      }
   }
   if (SendEmail && gd_1588 != 0.0 || gd_1596 != 0.0) jr654ej_Send_Email(g_count_1604, gd_1588, gd_1596);
}

void SCF_EA_STS() {
   int l_datetime_20;
   int li_28;
   int li_32;
   int li_0 = 0.0;
   double ld_4 = 0.0;
   double ld_12 = 0.0;
   int li_unused_24 = 0;
   if (as5da987asd()) {
      OrderSelect(g_ticket_332, SELECT_BY_TICKET);
      li_0 = zzxvy_s454(OrderTicket());
      if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
         if (li_0 < gi_580) gi_580 = li_0;
         li_28 = TimeCurrent() - OrderOpenTime();
         if (li_28 >= gi_596 && li_0 >= 2) {
            if (piwejansmj(g_ticket_332)) {
               g_ticket_332 = -1;
               gi_352 = FALSE;
            }
         } else {
            if (li_28 >= gi_592 && li_0 >= 4 && li_28 < gi_596) {
               if (piwejansmj(g_ticket_332)) {
                  g_ticket_332 = -1;
                  gi_352 = FALSE;
               }
            } else {
               if (li_28 >= gi_588 && li_0 >= 6 && li_28 < gi_592) {
                  if (piwejansmj(g_ticket_332)) {
                     g_ticket_332 = -1;
                     gi_352 = FALSE;
                  }
               } else {
                  if (gi_580 <= gi_584 && li_0 >= 3) {
                     if (piwejansmj(g_ticket_332)) {
                        g_ticket_332 = -1;
                        gi_352 = FALSE;
                     }
                  }
               }
            }
         }
         if (gi_336) ppsfjia485();
         if (gi_352) ltp_j4857(gi_344);
      } else {
         if (TimeCurrent() > OrderOpenTime() + 60 * gi_576 + 60)
            if (OrderDelete(g_ticket_332)) g_ticket_332 = -1;
      }
   } else {
      gi_352 = FALSE;
      gi_580 = 0;
      g_ticket_332 = -1;
   }
   if (AccountFreeMargin() < AccountBalance() * MarginCutOffPercent / 100.0) {
      if (g_ticket_332 != -1) {
         OrderSelect(g_ticket_332, SELECT_BY_TICKET);
         if (OrderType() == OP_BUYLIMIT || OrderType() == OP_SELLLIMIT) {
            if (piwejansmj(g_ticket_332)) {
               g_ticket_332 = -1;
               gi_352 = FALSE;
            }
         }
      }
   } else {
      if (Hour() - gi_108 < gi_600 && Hour() - gi_108 > gi_604) return;
      if (!gi_480)
         if (DayOfWeek() == 5 && Hour() - gi_108 > 0) return;
      if (DayOfWeek() == 1 && Hour() - gi_108 < 1) return;
      if (!ujasgd() || g_spread_324 > MaxSpread) return;
      if (NFA_Compliant && egudss2a5a5d11(Symbol())) return;
      if (gi_504) li_32 = 30;
      else li_32 = 60;
      for (int l_count_36 = 0; l_count_36 < 4; l_count_36++) {
         gda_516[0][l_count_36] = uiasgy_sdf(li_32, gi_520, l_count_36);
         gda_516[1][l_count_36] = uiasgy_sdf(li_32, gi_524, l_count_36);
         gda_516[2][l_count_36] = uiasgy_sdf(li_32, gi_528, l_count_36);
         gda_516[3][l_count_36] = uiasgy_sdf(li_32, gi_532, l_count_36);
         gda_516[4][l_count_36] = uiasgy_sdf(li_32, gi_536, l_count_36);
      }
      if (fun031(gda_516, iRSI(Symbol(), PERIOD_M15, g_period_540, PRICE_CLOSE, 0), iRSI(Symbol(), PERIOD_M5, g_period_544, PRICE_CLOSE, 0), gd_556, gd_548, gba_572)) {
         g_lots_564 = fun001(gd_1628, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
         if (!as5da987asd()) {
            if (gba_572[0] == 1) {
               ld_4 = Ask + gi_488 * Point;
               ld_12 = Ask - gi_492 * Point;
               l_datetime_20 = TimeCurrent() + 60 * gi_576;
               if (!gi_484) g_ticket_332 = OrderSend(Symbol(), OP_BUYLIMIT, g_lots_564, Ask - gi_496 * Point, Slippage, 0, 0, ExpertComment, g_magic_512, l_datetime_20, g_color_288);
               else g_ticket_332 = OrderSend(Symbol(), OP_BUY, g_lots_564, Ask, Slippage, 0, 0, ExpertComment, g_magic_512, 0, g_color_288);
               if (g_ticket_332 <= 0) {
                  Print("Error opening BUY order (" + fun045(GetLastError()) + ") ");
                  Sleep(3000);
               } else {
                  OrderSelect(g_ticket_332, SELECT_BY_TICKET);
                  nyusgfj(OrderTicket(), OrderOpenPrice(), ld_12, ld_4);
                  if (SoundAlert) PlaySound(SoundFileAtBuy);
                  if (SendEmail) Send_Email(g_ticket_332, "OPEN");
               }
            } else {
               if (gba_572[1] == 1) {
                  ld_4 = Bid - gi_488 * Point;
                  ld_12 = Bid + gi_492 * Point;
                  l_datetime_20 = TimeCurrent() + 60 * gi_576;
                  if (!gi_484) g_ticket_332 = OrderSend(Symbol(), OP_SELLLIMIT, g_lots_564, Bid + gi_500 * Point, Slippage, 0, 0, ExpertComment, g_magic_512, l_datetime_20, g_color_292);
                  else g_ticket_332 = OrderSend(Symbol(), OP_SELL, g_lots_564, Bid, Slippage, 0, 0, ExpertComment, g_magic_512, 0, g_color_292);
                  if (g_ticket_332 <= 0) {
                     Print("Error opening SELL order (" + fun045(GetLastError()) + ") ");
                     Sleep(3000);
                  } else {
                     OrderSelect(g_ticket_332, SELECT_BY_TICKET);
                     nyusgfj(OrderTicket(), OrderOpenPrice(), ld_12, ld_4);
                     if (SoundAlert) PlaySound(SoundFileAtSell);
                     if (SendEmail) Send_Email(g_ticket_332, "OPEN");
                  }
               }
            }
         }
      }
   }
}

void LNMSBHJ_SD54878_58787() {
   double l_iwpr_16;
   double ld_24;
   double ld_32;
   double ld_64;
   double ld_80;
   int li_116;
   double l_irsi_120;
   double l_irsi_128;
   double l_ibands_136;
   double l_ibands_144;
   bool li_152;
   double l_icci_156;
   double l_icci_164;
   double l_icci_172;
   double l_icci_180;
   double l_imomentum_192;
   double ld_0 = 0.0;
   double ld_8 = 0.0;
   if (gi_864 == TRUE) {
      for (int l_pos_104 = 0; l_pos_104 < OrdersTotal(); l_pos_104++) {
         OrderSelect(l_pos_104, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && fun032(OrderType(), OrderOpenPrice(), Bid, Ask, OrderMagicNumber(), g_magic_832, g_magic_836, gd_848)) piwejansmj(OrderTicket());
      }
   }
   for (int l_pos_108 = 0; l_pos_108 < OrdersTotal(); l_pos_108++) {
      OrderSelect(l_pos_108, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() == Symbol() && fun011(OrderType(), TimeCurrent(), OrderOpenTime(), Bid, Ask, OrderOpenPrice(), gd_848, OrderMagicNumber(), g_magic_832, g_magic_836, DayOfWeek(), Hour())) piwejansmj(OrderTicket());
   }
   bool li_112 = fun005(TimeHour(TimeCurrent()), gi_784, gi_788, Hour(), Minute());
   if (li_112) {
      li_116 = fun012(iOpen(Symbol(), PERIOD_M5, 0), iOpen(Symbol(), PERIOD_M5, 1), iOpen(Symbol(), PERIOD_M5, 2), Bid, Ask);
      l_irsi_120 = iRSI(NULL, PERIOD_M15, 6, PRICE_CLOSE, 0);
      l_irsi_128 = iRSI(NULL, PERIOD_M1, 20, PRICE_CLOSE, 0);
      asdf_isaudh();
      gi_952 = MathRound((g_ifractals_1000 - g_ifractals_1008) / gd_848);
      gd_956 = 0;
      gd_956 = fun023(1221, 0, g_ifractals_1000, g_ifractals_1000, g_ifractals_1008);
      gi_964 = MathRound(iATR(Symbol(), PERIOD_M15, 4, 0) / gd_848);
      l_ibands_136 = iBands(Symbol(), PERIOD_M5, 20, 2, 0, PRICE_WEIGHTED, MODE_UPPER, 1);
      l_ibands_144 = iBands(Symbol(), PERIOD_M5, 20, 2, 0, PRICE_WEIGHTED, MODE_LOWER, 1);
      li_152 = FALSE;
      if (Close[0] <= g_ifractals_1016 && Close[0] >= g_ifractals_1024) li_152 = TRUE;
      l_icci_156 = iCCI(Symbol(), PERIOD_M15, 14, PRICE_CLOSE, 0);
      l_icci_164 = iCCI(Symbol(), PERIOD_M5, 42, PRICE_CLOSE, 0);
      l_icci_172 = iCCI(Symbol(), PERIOD_M1, 210, PRICE_CLOSE, 0);
      l_icci_180 = iCCI(Symbol(), PERIOD_M1, 80, PRICE_CLOSE, 0);
      g_count_916 = 0;
      g_count_920 = 0;
      g_count_924 = 0;
      g_count_928 = 0;
      g_count_932 = 0;
      for (int l_pos_188 = 0; l_pos_188 < OrdersTotal(); l_pos_188++) {
         OrderSelect(l_pos_188, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == g_magic_832 || OrderMagicNumber() == g_magic_836) g_count_916++;
         else {
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == g_magic_832) {
               if (OrderType() == OP_BUY) g_count_928++;
               if (OrderType() == OP_SELL) g_count_920++;
            } else {
               if (OrderSymbol() == Symbol() && OrderMagicNumber() == g_magic_836) {
                  if (OrderType() == OP_BUY) g_count_932++;
                  if (OrderType() == OP_SELL) g_count_924++;
               }
            }
         }
      }
      l_imomentum_192 = iMomentum(Symbol(), PERIOD_M5, 4, PRICE_CLOSE, 0);
      if (NFA_Compliant && egudss2a5a5d11(Symbol())) {
         li_116 = 0;
         li_112 = FALSE;
      }
      if (li_116 && gi_952 < gi_880 && gi_964 < gi_884 && g_count_916 < gi_844 && li_152) {
         l_iwpr_16 = iWPR(Symbol(), PERIOD_M5, 14, 0);
         gi_912 = NormalizeDouble(gi_844 / 2, 0);
         ld_24 = NormalizeDouble(iMA(NULL, 0, 8, 0, MODE_SMA, PRICE_WEIGHTED, 1), 4);
         ld_32 = NormalizeDouble(iMA(NULL, 0, 8, 0, MODE_SMA, PRICE_WEIGHTED, 1), 4);
         if (li_116 && g_count_916 < gi_844 && li_152) {
            if (!h5sa4dhjsag_n(g_magic_832)) {
               if (DayOfWeek() == 0 || DayOfWeek() == 5 && Hour() >= 14) return;
               if (fun013(l_irsi_120, gd_808, l_irsi_128, gd_816, ld_24, Ask, gd_848, g_count_928, gi_888, g_spread_324, MaxSpread, AccountFreeMargin(), AccountBalance(), MarginCutOffPercent, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
                  gd_unused_936 = 0;
                  gd_944 = 0;
                  gd_944 = Ask - ld_64;
                  ld_8 = Ask + gi_780 * Point;
                  ld_0 = Ask - gi_776 * Point;
                  g_lots_564 = fun001(gd_1644, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
                  g_ticket_976 = OrderSend(Symbol(), OP_BUY, g_lots_564, Ask, Slippage, 0, 0, ExpertComment, g_magic_832, 0, g_color_288);
                  if (g_ticket_976 > 0 && OrderSelect(g_ticket_976, SELECT_BY_TICKET)) {
                     nyusgfj(OrderTicket(), OrderOpenPrice(), ld_0, ld_8);
                     if (SoundAlert) PlaySound(SoundFileAtBuy);
                     if (SendEmail) Send_Email(g_ticket_976, "OPEN");
                  } else Print("OrderSend Error ", fun045(GetLastError()));
                  gi_888 = FALSE;
                  gi_892 = TRUE;
               }
               if (fun014(l_irsi_120, gd_792, l_irsi_128, gd_800, ld_32, Bid, gd_848, g_count_920, gi_892, g_spread_324, MaxSpread, AccountFreeMargin(), AccountBalance(), MarginCutOffPercent, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
                  gd_unused_936 = 0;
                  gd_944 = 0;
                  gd_944 = Bid + ld_80;
                  ld_8 = Bid - gi_780 * Point;
                  ld_0 = Bid + gi_776 * Point;
                  g_lots_564 = fun001(gd_1644, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
                  g_ticket_980 = OrderSend(Symbol(), OP_SELL, g_lots_564, Bid, Slippage, 0, 0, ExpertComment, g_magic_832, 0, g_color_292);
                  if (g_ticket_980 > 0 && OrderSelect(g_ticket_980, SELECT_BY_TICKET)) {
                     nyusgfj(OrderTicket(), OrderOpenPrice(), ld_0, ld_8);
                     if (SoundAlert) PlaySound(SoundFileAtSell);
                     if (SendEmail) Send_Email(g_ticket_980, "OPEN");
                  } else Print("OrderSend Error ", fun045(GetLastError()));
                  gi_892 = FALSE;
                  gi_888 = TRUE;
               }
            }
            if (l_irsi_120 < 60.0 && l_irsi_120 > 40.0) {
               gi_892 = TRUE;
               gi_888 = TRUE;
            }
         }
         if (li_112) {
            if (!h5sa4dhjsag_n(g_magic_836)) {
               if (DayOfWeek() == 0 || DayOfWeek() == 5 && Hour() >= 14) return;
               if (fun015(l_icci_164, l_icci_172, l_icci_156, Bid, gd_956, gd_848, g_count_932, gi_912, gi_896, g_spread_324, MaxSpread, AccountFreeMargin(), AccountBalance(), MarginCutOffPercent, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
                  gd_unused_936 = 0;
                  gd_944 = 0;
                  if (gi_864) gd_unused_936 = g_ifractals_1000;
                  ld_8 = Ask + gi_780 * Point;
                  ld_0 = Ask - gi_776 * Point;
                  g_lots_564 = fun001(gd_1644, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
                  g_ticket_984 = OrderSend(Symbol(), OP_BUY, g_lots_564, Ask, Slippage, 0, 0, ExpertComment, g_magic_836, 0, g_color_288);
                  if (g_ticket_984 > 0 && OrderSelect(g_ticket_984, SELECT_BY_TICKET)) {
                     nyusgfj(OrderTicket(), OrderOpenPrice(), ld_0, ld_8);
                     if (SoundAlert) PlaySound(SoundFileAtBuy);
                     if (SendEmail) Send_Email(g_ticket_984, "OPEN");
                  } else Print("OrderSend Error ", fun045(GetLastError()));
                  gi_896 = FALSE;
                  gi_900 = TRUE;
               }
               if (fun016(l_icci_164, l_icci_172, l_icci_156, Ask, gd_956, gd_848, g_count_924, gi_912, gi_900, g_spread_324, MaxSpread, AccountFreeMargin(), AccountBalance(), MarginCutOffPercent, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
                  gd_unused_936 = 0;
                  gd_944 = 0;
                  if (gi_864) gd_unused_936 = g_ifractals_1008;
                  ld_8 = Bid - gi_780 * Point;
                  ld_0 = Bid + gi_776 * Point;
                  g_lots_564 = fun001(gd_1644, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
                  g_ticket_988 = OrderSend(Symbol(), OP_SELL, g_lots_564, Bid, Slippage, 0, 0, ExpertComment, g_magic_836, 0, g_color_292);
                  if (g_ticket_988 > 0 && OrderSelect(g_ticket_988, SELECT_BY_TICKET)) {
                     nyusgfj(OrderTicket(), OrderOpenPrice(), ld_0, ld_8);
                     if (SoundAlert) PlaySound(SoundFileAtSell);
                     if (SendEmail) Send_Email(g_ticket_988, "OPEN");
                  } else Print("OrderSend Error ", fun045(GetLastError()));
                  gi_900 = FALSE;
                  gi_896 = TRUE;
               }
            }
            if (l_icci_156 < 50.0 && l_icci_156 > -50.0) {
               gi_900 = TRUE;
               gi_896 = TRUE;
            }
            if (DayOfWeek() == 0 || DayOfWeek() == 5 && Hour() >= 14) return;
            if (fun017(l_imomentum_192, gd_824, l_icci_180, Ask, gd_956, gd_848, gi_912, gi_904, g_spread_324, MaxSpread, AccountFreeMargin(), AccountBalance(), MarginCutOffPercent, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
               gd_unused_936 = 0;
               gd_944 = 0;
               if (gi_864) gd_unused_936 = g_ifractals_1008;
               if (gi_868) gd_944 = g_ifractals_1000 + gd_872 * gd_848;
               else gd_944 = Bid + gd_872 * gd_848;
               ld_8 = Bid - gi_780 * Point;
               ld_0 = Bid + gi_776 * Point;
               g_lots_564 = fun001(gd_1644, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
               g_ticket_992 = OrderSend(Symbol(), OP_SELL, g_lots_564, Bid, Slippage, 0, 0, ExpertComment, g_magic_836, 0, g_color_292);
               if (g_ticket_992 > 0 && OrderSelect(g_ticket_992, SELECT_BY_TICKET)) {
                  nyusgfj(OrderTicket(), OrderOpenPrice(), ld_0, ld_8);
                  if (SoundAlert) PlaySound(SoundFileAtSell);
                  if (SendEmail) Send_Email(g_ticket_992, "OPEN");
               } else Print("OrderSend Error ", fun045(GetLastError()));
               gi_904 = FALSE;
            }
            if (l_icci_180 >= -50.0 && l_icci_180 <= 50.0) gi_904 = TRUE;
            if (DayOfWeek() == 0 || DayOfWeek() == 5 && Hour() >= 14) return;
            if (fun018(l_iwpr_16, iMA(Symbol(), PERIOD_M5, 1, 0, MODE_EMA, PRICE_HIGH, 0), l_ibands_136, Bid, gd_956, gd_848, gi_912, gi_908, g_spread_324, MaxSpread, AccountFreeMargin(), AccountBalance(), MarginCutOffPercent, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
               gd_unused_936 = 0;
               gd_944 = 0;
               if (gi_864) gd_unused_936 = g_ifractals_1008;
               if (gi_868) gd_944 = Bid + gi_880 * gd_848;
               else gd_944 = Bid + gd_872 * gd_848;
               ld_8 = Bid - gi_780 * Point;
               ld_0 = Bid + gi_776 * Point;
               g_lots_564 = fun001(gd_1644, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
               g_ticket_996 = OrderSend(Symbol(), OP_SELL, g_lots_564, Bid, Slippage, 0, 0, ExpertComment, g_magic_836, 0, g_color_292);
               if (g_ticket_996 > 0 && OrderSelect(g_ticket_996, SELECT_BY_TICKET)) {
                  nyusgfj(OrderTicket(), OrderOpenPrice(), ld_0, ld_8);
                  if (SoundAlert) PlaySound(SoundFileAtSell);
                  if (SendEmail) Send_Email(g_ticket_996, "OPEN");
               } else Print("OrderSend Error ", fun045(GetLastError()));
               gi_908 = FALSE;
            }
         }
         if (l_irsi_120 < 60.0 && l_irsi_120 > 40.0) gi_908 = TRUE;
      }
   }
}

void QUYT_A9IA_545A() {
   double l_iclose_0;
   double l_iclose_8;
   int l_shift_16;
   int l_shift_20;
   bool li_32;
   int lia_36[500];
   int lia_40[1];
   double lda_44[1];
   double lda_48[1];
   double lda_52[1];
   double lda_56[1];
   gi_1044 = TimeCurrent() - 3600.0 * gi_1036;
   g_hour_1048 = TimeHour(gi_1044);
   gi_1052 = (-3600.0 * g_hour_1048) - 60 * TimeMinute(gi_1052) - TimeSeconds(gi_1044);
   g_stoplevel_1056 = MarketInfo(Symbol(), MODE_STOPLEVEL);
   gd_1060 = 0.0001 / Point;
   if (Digits < 4) gd_1060 = 100.0 * gd_1060;
   if (g_ticket_1124 < 0) {
      g_ticket_1124 = sjdhfjdhfjdhf(gi_1032, OP_BUY);
      if (g_ticket_1124 >= 0) OrderSelect(g_ticket_1124, SELECT_BY_TICKET);
   }
   if (g_ticket_1128 < 0) {
      g_ticket_1128 = sjdhfjdhfjdhf(gi_1032, OP_SELL);
      if (g_ticket_1128 >= 0) OrderSelect(g_ticket_1128, SELECT_BY_TICKET);
   }
   HideTestIndicators(TRUE);
   g_irsi_1068 = iRSI(NULL, PERIOD_M15, 6, PRICE_CLOSE, 0);
   g_irsi_1076 = iRSI(NULL, PERIOD_M1, 20, PRICE_CLOSE, 0);
   g_icci_1084 = iCCI(NULL, PERIOD_M15, 8, PRICE_TYPICAL, 0);
   g_ima_1092 = iMA(NULL, PERIOD_M15, 8, 0, MODE_SMA, PRICE_MEDIAN, 0);
   HideTestIndicators(FALSE);
   if (g_ticket_1124 >= 0) {
      if (OrderSelect(g_ticket_1124, SELECT_BY_TICKET) && OrderCloseTime() == 0) {
         if (fun009(Bid, OrderOpenPrice(), Digits, gd_1060, OrderOpenTime(), g_icci_1084, g_irsi_1068, OrderProfit(), Point, zzxvy_s454(OrderTicket())) || fun044(gs_316, zzxvy_s454(OrderTicket()), TimeCurrent() - OrderOpenTime(), gi_588, gi_592, gi_596, EURCHF_Grid_Strategy))
            if (piwejansmj(g_ticket_1124)) g_ticket_1124 = -1;
      } else g_ticket_1124 = -1;
   }
   if (g_ticket_1128 >= 0) {
      if (OrderSelect(g_ticket_1128, SELECT_BY_TICKET) && OrderCloseTime() == 0) {
         if (fun010(Ask, OrderOpenPrice(), Digits, gd_1060, OrderOpenTime(), g_icci_1084, g_irsi_1068, OrderProfit(), Point, zzxvy_s454(OrderTicket())) || fun044(gs_316, zzxvy_s454(OrderTicket()), TimeCurrent() - OrderOpenTime(), gi_588, gi_592, gi_596, EURCHF_Grid_Strategy))
            if (piwejansmj(g_ticket_1128)) g_ticket_1128 = -1;
      } else g_ticket_1128 = -1;
   }
   if (EURCHF_Grid_Strategy == FALSE && !fun005(TimeHour(TimeCurrent()), gi_784, gi_788, Hour(), Minute())) return;
   int li_24 = -1;
   int li_28 = -1;
   if (-gi_1052 < 43200) g_shift_1100 = iBarShift(NULL, PERIOD_M15, gi_1052 - 86400);
   else g_shift_1100 = iBarShift(NULL, PERIOD_M15, gi_1052);
   g_ihigh_1104 = iHigh(NULL, PERIOD_M15, iHighest(NULL, PERIOD_M15, MODE_HIGH, g_shift_1100, 0));
   g_ilow_1112 = iLow(NULL, PERIOD_M15, iLowest(NULL, PERIOD_M15, MODE_LOW, g_shift_1100, 0));
   if (NFA_Compliant && g_ticket_1124 < 0 && egudss2a5a5d11(Symbol())) g_ticket_1124 = 1;
   if (g_ticket_1124 < 0) {
      if (-gi_1052 < 43200) {
         l_shift_16 = iBarShift(NULL, PERIOD_M15, gi_1052 - 86400);
         l_shift_20 = iBarShift(NULL, PERIOD_M15, gi_1052);
      } else {
         l_shift_16 = iBarShift(NULL, PERIOD_M15, gi_1052);
         l_shift_20 = 0;
      }
      l_iclose_8 = iClose(NULL, PERIOD_M15, l_shift_16);
      l_iclose_0 = iClose(NULL, PERIOD_M15, l_shift_20);
      if (l_iclose_0 < l_iclose_8) li_24 = 0;
      else li_24 = fun024(Ask, g_icci_1084, g_irsi_1068, g_irsi_1076, g_ima_1092, gd_1060 * Point, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472);
   }
   if (NFA_Compliant && g_ticket_1128 < 0 && egudss2a5a5d11(Symbol())) g_ticket_1128 = 1;
   if (g_ticket_1128 < 0) {
      if (-gi_1052 < 43200) {
         l_shift_16 = iBarShift(NULL, PERIOD_M15, gi_1052 - 86400);
         l_shift_20 = iBarShift(NULL, PERIOD_M15, gi_1052);
      } else {
         l_shift_16 = iBarShift(NULL, PERIOD_M15, gi_1052);
         l_shift_20 = 0;
      }
      l_iclose_8 = iClose(NULL, PERIOD_M15, l_shift_16);
      l_iclose_0 = iClose(NULL, PERIOD_M15, l_shift_20);
      if (l_iclose_0 > l_iclose_8) li_28 = 0;
      else li_28 = fun025(Bid, g_icci_1084, g_irsi_1068, g_irsi_1076, g_ima_1092, gd_1060 * Point, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472);
   }
   if (li_24 == 1 && g_datetime_1132 != iTime(NULL, PERIOD_M15, 0)) {
      li_32 = FALSE;
      if (!EURCHF_Grid_Strategy) li_32 = TRUE;
      else {
         ArrayInitialize(lia_36, 0);
         ArrayInitialize(lia_40, 0);
         if (fun030(Ask, Bid, gda_1152, gda_1156, gia_1160, gd_1172, lia_36, 1, lia_40, 0, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472) == 0) li_32 = TRUE;
      }
      if (li_32) {
         lda_44[0] = 0;
         lda_48[0] = 0;
         fun007(g_ilow_1112, Bid, Ask, Point, gd_1060, g_stoplevel_1056, gi_772, lda_44, lda_48, lda_52, lda_56, Digits, gs_316);
         g_lots_564 = fun001(gd_1652, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
         if (EURCHF_Grid_Strategy) lda_52[0] = 0;
         g_ticket_1124 = ystqlahf(OP_BUY, g_lots_564, Ask, lda_56[0], lda_52[0], gi_1032, g_color_288);
         if (g_ticket_1124 >= 0) g_datetime_1132 = iTime(NULL, PERIOD_M15, 0);
      }
   }
   if (li_28 == 1 && g_datetime_1136 != iTime(NULL, PERIOD_M15, 0)) {
      li_32 = FALSE;
      if (!EURCHF_Grid_Strategy) li_32 = TRUE;
      else {
         ArrayInitialize(lia_36, 0);
         ArrayInitialize(lia_40, 0);
         if (fun030(Ask, Bid, gda_1152, gda_1156, gia_1160, gd_1172, lia_36, 1, lia_40, 0, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472) == 1) li_32 = TRUE;
      }
      if (li_32) {
         lda_44[0] = 0;
         lda_48[0] = 0;
         fun008(g_ihigh_1104, Ask, Bid, Point, gd_1060, g_stoplevel_1056, gi_772, lda_44, lda_48, lda_52, lda_56, Digits, gs_316);
         g_lots_564 = fun001(gd_1652, MoneyManagement, LotSize, RiskLevel, AccountLeverage(), AccountFreeMargin(), gd_456, g_lotstep_448, gi_772, gd_440, gd_432, MaxLots);
         if (EURCHF_Grid_Strategy) lda_52[0] = 0;
         g_ticket_1128 = ystqlahf(OP_SELL, g_lots_564, Bid, lda_56[0], lda_52[0], gi_1032, g_color_292);
         if (g_ticket_1128 >= 0) g_datetime_1136 = iTime(NULL, PERIOD_M15, 0);
      }
   }
}

void KJSDHF_4S865A_AS85() {
   int lia_0[1];
   ArrayInitialize(gia_1144, 0);
   gi_1148 = x45sd_jsakh(gia_1144);
   gi_1164 = fun030(Ask, Bid, gda_1152, gda_1156, gia_1160, gd_1172, gia_1144, gi_1148, lia_0, 1, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472);
   gi_1168 = lia_0[0];
   s5sa4d8s(gi_1164);
}

void jr654ej() {
   double ld_0;
   double ld_8;
   double ld_16;
   double lda_24[1];
   int lia_28[1];
   int lia_32[1];
   int lia_40[1];
   int lia_44[1];
   double lda_48[1];
   double lda_52[1];
   double lda_56[1];
   double ld_60;
   if (GBPUSD_Hedging_CloseAll) {
      osdufoidsu(g_magic_1204, g_magic_1208);
      return;
   }
   if (IsTesting()) {
      if (TimeCurrent() - g_datetime_1752 >= 1800) {
         Print("Bid/Ask = ", DoubleToStr(Bid, Digits) + "/" + DoubleToStr(Ask, Digits));
         Print("Account equity = ", AccountEquity());
         Print("Account balance = ", AccountBalance());
         g_datetime_1752 = TimeCurrent();
      }
   }
   int li_36 = fun035(Digits, Point, MarketInfo(Symbol(), MODE_LOTSIZE), Symbol(), iBars(Symbol(), PERIOD_H4), iBars(Symbol(), PERIOD_D1), lda_24, lia_28, lia_32);
   gd_1576 = lda_24[0];
   gi_1184 = lia_32[0];
   if (li_36) {
      g_iadx_1464 = iADX(NULL, PERIOD_M30, 19, PRICE_CLOSE, MODE_MAIN, 0);
      g_iadx_1472 = iADX(NULL, PERIOD_M30, 19, PRICE_CLOSE, MODE_MAIN, 1);
      g_ima_1488 = iMA(NULL, PERIOD_M30, 12, 0, MODE_SMA, PRICE_CLOSE, 0);
      gd_1480 = 2.0 * iATR(NULL, PERIOD_M30, 12, 0);
      gd_1504 = g_ima_1488 + gd_1480;
      gd_1496 = g_ima_1488 - gd_1480;
      g_ima_1520 = iMA(NULL, PERIOD_D1, 50, 0, MODE_SMA, PRICE_CLOSE, 0);
      gd_1512 = 2.0 * iATR(NULL, PERIOD_D1, 50, 0);
      gd_1536 = g_ima_1520 + gd_1512;
      gd_1528 = g_ima_1520 - gd_1512;
      g_ima_1552 = iMA(NULL, PERIOD_D1, 9, 0, MODE_SMA, PRICE_CLOSE, 0);
      g_ima_1544 = iMA(NULL, PERIOD_D1, 9, 0, MODE_SMA, PRICE_CLOSE, 0);
      lia_40[0] = g_global_var_1428;
      lia_44[0] = g_global_var_1432;
      fun037(lia_40, iRSI(NULL, PERIOD_D1, 12, PRICE_CLOSE, 0), lia_44);
      g_global_var_1428 = lia_40[0];
      g_global_var_1432 = lia_44[0];
      GlobalVariableSet(g_var_name_1228, g_global_var_1428);
      GlobalVariableSet(g_var_name_1220, g_global_var_1432);
      lia_40[0] = g_global_var_1436;
      lia_44[0] = g_global_var_1440;
      fun038(lia_40, iRSI(NULL, PERIOD_H4, 12, PRICE_CLOSE, 0), iRSI(NULL, PERIOD_D1, 12, PRICE_CLOSE, 0), lia_44);
      g_global_var_1436 = lia_40[0];
      g_global_var_1440 = lia_44[0];
      GlobalVariableSet(g_var_name_1244, g_global_var_1436);
      GlobalVariableSet(g_var_name_1236, g_global_var_1440);
      g_global_var_1420 = GlobalVariableGet(g_var_name_1212);
      if (asf47sws(g_magic_1204) < (-0.2 * g_global_var_1420) || asf47sws(g_magic_1208) < (-0.2 * g_global_var_1420) || asf47sws(g_magic_1204) + asf47sws(g_magic_1208) < (-0.2 * g_global_var_1420) ||
         AccountProfit() < (-0.2 * g_global_var_1420) || OrdersTotal() > 90) {
         gi_1456 = FALSE;
         gi_1460 = FALSE;
      } else {
         gi_1456 = TRUE;
         gi_1460 = TRUE;
      }
      if (OrdersTotal() > 0) {
         fun033(g_lots_1388, g_lots_1396, gi_1184, lda_48, lda_52, lda_56);
         ld_0 = lda_48[0];
         gd_1188 = lda_52[0];
      }
      if (!gi_1184) ld_8 = 1000.0 * ld_0;
      else ld_8 = 1000.0 * (ld_0 / 10.0);
      gi_1616 = TRUE;
      if (g_count_1748 + g_count_1744 > 59 || AccountEquity() > g_global_var_1420 + gd_1188 || (g_global_var_1372 != 0.0 && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_global_var_1404)) > 20.0) ||
         (g_global_var_1380 != 0.0 && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_global_var_1408)) > 20.0)) gi_1616 = TRUE;
      else gi_1616 = FALSE;
      if (gi_1616) {
         if (AccountEquity() > g_global_var_1420 + ld_8) {
            if (g_global_var_1372 != 0.0) {
               while (aiyui6(g_magic_1204) > 0) pasodajy(g_magic_1204);
               g_global_var_1372 = 0;
               GlobalVariableSet(g_var_name_1316, g_global_var_1372);
               g_global_var_1404 = 0;
               GlobalVariableSet(g_var_name_1292, g_global_var_1404);
            }
            if (g_global_var_1380 != 0.0) {
               while (aiyui6(g_magic_1208) > 0) pasodajy(g_magic_1208);
               g_global_var_1380 = 0;
               GlobalVariableSet(g_var_name_1356, g_global_var_1380);
               g_global_var_1408 = 0;
               GlobalVariableSet(g_var_name_1332, g_global_var_1408);
            }
            gi_1444++;
            GlobalVariableSet(g_var_name_1252, gi_1444);
         }
      }
      if (OrdersTotal() == 0 && AccountEquity() > g_global_var_1420) {
         g_global_var_1420 = AccountEquity();
         GlobalVariableSet(g_var_name_1212, g_global_var_1420);
      }
      ld_60 = 0;
      if (g_global_var_1372 != 0.0) {
         if (!gi_1184) ld_60 = 1000.0 * g_lots_1388;
         else ld_60 = 1000.0 * (g_lots_1388 / 10.0);
         g_global_var_1404 = GlobalVariableGet(g_var_name_1292);
         if (asf47sws(g_magic_1204) + fsd897(g_magic_1204, g_global_var_1404) >= ld_60) {
            while (aiyui6(g_magic_1204) > 0) pasodajy(g_magic_1204);
            gi_1448++;
            GlobalVariableSet(g_var_name_1324, gi_1448);
            g_global_var_1372 = 0;
            GlobalVariableSet(g_var_name_1316, g_global_var_1372);
            g_global_var_1404 = 0;
            GlobalVariableSet(g_var_name_1292, g_global_var_1404);
         }
      }
      if (g_global_var_1372 == 0.0 && gi_1456) {
         if (fun034(g_iadx_1464, g_iadx_1472, iClose(NULL, 0, 0), gd_1504, gd_1496, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
            if (fun036(0, g_magic_1204, iClose(NULL, 0, 0), g_global_var_1380, gi_1180, gd_1576, TimeDayOfYear(TimeCurrent()), TimeDayOfYear(g_global_var_1408), TimeDayOfYear(gi_1412), TimeDayOfYear(gi_1416), g_global_var_1372, TimeDayOfYear(g_global_var_1404), KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
               g_global_var_1372 = iClose(NULL, 0, 0);
               GlobalVariableSet(g_var_name_1316, g_global_var_1372);
               g_global_var_1404 = TimeCurrent();
               GlobalVariableSet(g_var_name_1292, g_global_var_1404);
            }
         }
      }
      if (g_global_var_1372 != 0.0) {
         kdsjoa8547(g_magic_1204);
         u58dsax_djsah(g_magic_1204);
         d8s2fpsj5(g_magic_1204);
         s9f7a92(g_magic_1204);
      }
      if (g_global_var_1380 != 0.0) {
         if (!gi_1184) ld_16 = 1000.0 * g_lots_1396;
         else ld_16 = 1000.0 * (g_lots_1396 / 10.0);
         if (asf47sws(g_magic_1208) + fsd897(g_magic_1208, g_global_var_1408) >= ld_16) {
            pasodajy(g_magic_1208);
            gi_1452++;
            GlobalVariableSet(g_var_name_1364, gi_1452);
            g_global_var_1380 = 0;
            GlobalVariableSet(g_var_name_1356, g_global_var_1380);
            g_global_var_1408 = 0;
            GlobalVariableSet(g_var_name_1332, g_global_var_1408);
         }
      }
      if (g_global_var_1380 == 0.0 && gi_1460) {
         if (fun034(g_iadx_1464, g_iadx_1472, iClose(NULL, 0, 0), gd_1504, gd_1496, KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
            if (fun036(1, g_magic_1204, iClose(NULL, 0, 0), g_global_var_1380, gi_1180, gd_1576, TimeDayOfYear(TimeCurrent()), TimeDayOfYear(g_global_var_1408), TimeDayOfYear(gi_1412), TimeDayOfYear(gi_1416), g_global_var_1372, TimeDayOfYear(g_global_var_1404), KEY, g_acc_number_464, gsa_468[0], gsa_468[1], gsa_468[2], g_bool_472)) {
               g_global_var_1380 = iClose(NULL, 0, 0);
               GlobalVariableSet(g_var_name_1356, g_global_var_1380);
               g_global_var_1408 = TimeCurrent();
               GlobalVariableSet(g_var_name_1332, g_global_var_1408);
            }
         }
      }
      if (g_global_var_1380 != 0.0) {
         kdsjoa8547(g_magic_1208);
         u58dsax_djsah(g_magic_1208);
         d8s2fpsj5(g_magic_1208);
         s9f7a92(g_magic_1208);
      }
   }
}
